[{"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\OtrosFamiliares.js":"1","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Pdf\\Pdf.js":"2","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\TableRowFamiliares.js":"3","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\Educacion.js":"4","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\FormPostulanteEducacion.js":"5","C:\\xampp\\htdocs\\frontendFormulario\\src\\index.js":"6","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Footer.js":"7","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Header.js":"8","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\Routing.js":"9","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\Index.js":"10","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\tablas.js":"11","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\auth.js":"12","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\index.js":"13","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\index.js":"14","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\index.js":"15","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\index.js":"16","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\FormOtrosFamiliares.js":"17","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\FormParejaPreguntas.js":"18","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\FormPareja.js":"19","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\FormPadreLaboral.js":"20","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\FormMadrePreguntas.js":"21","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\index.js":"22","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\Preguntas.js":"23","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\index.js":"24","C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\validations.js":"25","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\AgregarOtrosFamiliares.js":"26","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\OtrosEstudios.js":"27","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\FormPostulante.js":"28","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\DatosPersonales.js":"29","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\FormPostulanteLaboral.js":"30","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\Laboral.js":"31","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\FormPostulantePreguntas.js":"32","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\FormMadre.js":"33","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\FormMadreLaboral.js":"34","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\FormPadre.js":"35","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\FormPadrePreguntas.js":"36","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\FormParejaLaboral.js":"37","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\TableRowPregPDF.js":"38","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\index.js":"39","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\index.js":"40","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\index.js":"41","C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\constant.js":"42","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\index.js":"43","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\index.js":"44","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\index.js":"45","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\index.js":"46","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\index.js":"47","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\combos.js":"48","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\BasicModal.js":"49","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\InicioForm.js":"50","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\index.js":"51","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\index.js":"52","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\index.js":"53","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\TableRow.js":"54","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\configRouting.js":"55","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\index.js":"56","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\index.js":"57","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\index.js":"58","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\index.js":"59","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\TableRowEducacion.js":"60","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\index.js":"61","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\index.js":"62","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\index.js":"63","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\index.js":"64","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\index.js":"65"},{"size":3574,"mtime":1619116331579,"results":"66","hashOfConfig":"67"},{"size":41556,"mtime":1619444815117,"results":"68","hashOfConfig":"67"},{"size":900,"mtime":1619023034872,"results":"69","hashOfConfig":"67"},{"size":9853,"mtime":1619019975591,"results":"70","hashOfConfig":"67"},{"size":921,"mtime":1619018909588,"results":"71","hashOfConfig":"67"},{"size":758,"mtime":1614476045805,"results":"72","hashOfConfig":"67"},{"size":172,"mtime":1610723537047,"results":"73","hashOfConfig":"67"},{"size":364,"mtime":1613959537365,"results":"74","hashOfConfig":"67"},{"size":488,"mtime":1613960972349,"results":"75","hashOfConfig":"67"},{"size":44,"mtime":1610368043906,"results":"76","hashOfConfig":"67"},{"size":5891,"mtime":1619022382209,"results":"77","hashOfConfig":"67"},{"size":12554,"mtime":1619526450223,"results":"78","hashOfConfig":"67"},{"size":52,"mtime":1614180707964,"results":"79","hashOfConfig":"67"},{"size":50,"mtime":1614346415938,"results":"80","hashOfConfig":"67"},{"size":49,"mtime":1614343648822,"results":"81","hashOfConfig":"67"},{"size":49,"mtime":1614272216865,"results":"82","hashOfConfig":"67"},{"size":762,"mtime":1614864033338,"results":"83","hashOfConfig":"67"},{"size":1018,"mtime":1614863802199,"results":"84","hashOfConfig":"67"},{"size":1192,"mtime":1614863762683,"results":"85","hashOfConfig":"67"},{"size":1144,"mtime":1614863671762,"results":"86","hashOfConfig":"67"},{"size":981,"mtime":1614863520386,"results":"87","hashOfConfig":"67"},{"size":49,"mtime":1610712224302,"results":"88","hashOfConfig":"67"},{"size":5107,"mtime":1614766707573,"results":"89","hashOfConfig":"67"},{"size":41,"mtime":1610326572539,"results":"90","hashOfConfig":"67"},{"size":398,"mtime":1618416460125,"results":"91","hashOfConfig":"67"},{"size":9102,"mtime":1619116633256,"results":"92","hashOfConfig":"67"},{"size":3767,"mtime":1614698233285,"results":"93","hashOfConfig":"67"},{"size":1093,"mtime":1619023527705,"results":"94","hashOfConfig":"67"},{"size":45195,"mtime":1619620610184,"results":"95","hashOfConfig":"67"},{"size":1158,"mtime":1614863225063,"results":"96","hashOfConfig":"67"},{"size":25783,"mtime":1619624212300,"results":"97","hashOfConfig":"67"},{"size":994,"mtime":1614863328631,"results":"98","hashOfConfig":"67"},{"size":1171,"mtime":1614863425760,"results":"99","hashOfConfig":"67"},{"size":1148,"mtime":1614863484831,"results":"100","hashOfConfig":"67"},{"size":1174,"mtime":1619025609266,"results":"101","hashOfConfig":"67"},{"size":989,"mtime":1614863702832,"results":"102","hashOfConfig":"67"},{"size":1174,"mtime":1614863832924,"results":"103","hashOfConfig":"67"},{"size":446,"mtime":1615321876847,"results":"104","hashOfConfig":"67"},{"size":46,"mtime":1614515484042,"results":"105","hashOfConfig":"67"},{"size":48,"mtime":1613743138853,"results":"106","hashOfConfig":"67"},{"size":49,"mtime":1613751483882,"results":"107","hashOfConfig":"67"},{"size":2330,"mtime":1615323549959,"results":"108","hashOfConfig":"67"},{"size":54,"mtime":1619018858620,"results":"109","hashOfConfig":"67"},{"size":47,"mtime":1614271876699,"results":"110","hashOfConfig":"67"},{"size":40,"mtime":1610376999948,"results":"111","hashOfConfig":"67"},{"size":46,"mtime":1610397084828,"results":"112","hashOfConfig":"67"},{"size":40,"mtime":1610397150959,"results":"113","hashOfConfig":"67"},{"size":6298,"mtime":1619024656535,"results":"114","hashOfConfig":"67"},{"size":414,"mtime":1614695089946,"results":"115","hashOfConfig":"67"},{"size":500,"mtime":1614265396323,"results":"116","hashOfConfig":"67"},{"size":50,"mtime":1614346624958,"results":"117","hashOfConfig":"67"},{"size":40,"mtime":1610377787421,"results":"118","hashOfConfig":"67"},{"size":40,"mtime":1610397237220,"results":"119","hashOfConfig":"67"},{"size":4681,"mtime":1614766189759,"results":"120","hashOfConfig":"67"},{"size":2444,"mtime":1614468149962,"results":"121","hashOfConfig":"67"},{"size":41,"mtime":1610377888617,"results":"122","hashOfConfig":"67"},{"size":38,"mtime":1610397186881,"results":"123","hashOfConfig":"67"},{"size":48,"mtime":1614345995506,"results":"124","hashOfConfig":"67"},{"size":39,"mtime":1613498802096,"results":"125","hashOfConfig":"67"},{"size":346,"mtime":1613751607815,"results":"126","hashOfConfig":"67"},{"size":47,"mtime":1614343355990,"results":"127","hashOfConfig":"67"},{"size":53,"mtime":1610712559601,"results":"128","hashOfConfig":"67"},{"size":45,"mtime":1610399996177,"results":"129","hashOfConfig":"67"},{"size":54,"mtime":1614180777020,"results":"130","hashOfConfig":"67"},{"size":44,"mtime":1610620182596,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},"ga6b1n",{"filePath":"136","messages":"137","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"139"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"139"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"139"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"139"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"135"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"139"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"135"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"139"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"146"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"139"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"135"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"139"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"181"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"139"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"139"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"139"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"139"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"139"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\OtrosFamiliares.js",["297","298","299","300","301"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Jumbotron, Table, Container } from \"react-bootstrap\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { map } from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUsers,\r\n  faPlus,\r\n  faSave,\r\n  faCloudDownloadAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport BasicModal from \"../../../Modal/BasicModal/index\";\r\nimport AgregarOtrosFamiliares from \"../AgregarOtrosFamiliares/index\";\r\nimport { getIdPostu } from \"../../../../api/auth\";\r\nimport {\r\n  getOtrosFamiliaresPersona,\r\n  listaOtrosFamiliaresPersona,\r\n} from \"../../../../api/tablas\";\r\nimport TableRowFamiliares from \"../TableRowFamiliares\";\r\n\r\nimport \"../../FormPostulante/FormPostulante\";\r\n\r\nexport default function FormOtrosFamiliares() {\r\n  //Para manejar el Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentModal, setContentModal] = useState(null);\r\n  //estate que uso para mandar al modal de agregar otros fliares e incrementar cuando se cierra el mismo para hacer que el useEfect que carga los familiares se ejecute al cambiar contador\r\n  const [contador, setcontador] = useState(1);\r\n  const [fliares, setfliares] = useState([]);\r\n  //funcion que abre el modal y le agrega el contenido de los form\r\n  const openModal = (content) => {\r\n    setShowModal(true);\r\n    setContentModal(content);\r\n  };\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  useEffect(() => {\r\n    getOtrosFamiliaresPersona(getIdPostu())\r\n      .then((response) => {\r\n        let listaFliares = formatModel(response.data);\r\n        setfliares(listaFliares);\r\n      })\r\n      .catch(() => {});\r\n  }, [contador]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setGuardadoLoading(true);\r\n    listaOtrosFamiliaresPersona(getIdPostu());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <BasicModal show={showModal} setShow={setShowModal}>\r\n          {contentModal}\r\n        </BasicModal>\r\n\r\n        <Form onSubmit={onSubmit}>\r\n          <Jumbotron>\r\n            <div>\r\n              <h3>Otros integrantes del nucleo Habitacional</h3>\r\n              <Button\r\n                variant=\"agregar\"\r\n                onClick={() =>\r\n                  openModal(\r\n                    <AgregarOtrosFamiliares\r\n                      setShowModal={setShowModal}\r\n                      contador={contador}\r\n                      setcontador={setcontador}\r\n                    />\r\n                  )\r\n                }\r\n              >\r\n                <span>\r\n                  Añadir\r\n                  <FontAwesomeIcon icon={faUsers} />\r\n                </span>\r\n              </Button>\r\n\r\n              {fliares.length === 0 ? (\r\n                <tr>No hay Familiares ingresados</tr>\r\n              ) : (\r\n                map(fliares, (fliar, index) => (\r\n                  <TableRowFamiliares pariente={fliar} key={index} />\r\n                ))\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\nfunction formatModel(fliares) {\r\n  //lista temporal\r\n  const fliaresTemp = [];\r\n\r\n  fliares.forEach((fliar) => {\r\n    fliaresTemp.push({\r\n      //creo el formato\r\n      id: fliar.familiar_id,\r\n      primerNombre: fliar.primerNombre,\r\n      primerApellido: fliar.primerApellido,\r\n      fechaNacimiento: fliar.fechaNacimiento,\r\n      parentesco: fliar.nombre,\r\n      cedula: fliar.cedula,\r\n    });\r\n  });\r\n  return fliaresTemp;\r\n}\r\n",["302","303"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Pdf\\Pdf.js",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"import React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { map } from \"lodash\";\r\nimport TableRowEducacion from \"../Forms/Componentes/TableRowEducacion/index\";\r\nimport TableRowPregPDF from \"../Forms/Componentes/TableRowPregPDF/index\";\r\nimport TableRowFamiliares from \"../Forms/Componentes/TableRowFamiliares/index\";\r\nimport {\r\n  listaOtrosEstudios,\r\n  getEstudiosLocal,\r\n  listarRespuestas,\r\n  getRespuestasLocal,\r\n  getOtrosFamiliaresPersona,\r\n  getfliaresLocal,\r\n  listaOtrosFamiliaresPersona,\r\n} from \"../../api/tablas\";\r\nimport \"../../scss/index.scss\";\r\nimport \"../../scss/pdf.scss\";\r\n\r\nimport { Row, Col, Form, Container, Table, Button } from \"react-bootstrap\";\r\nimport {\r\n  getDataPostu,\r\n  getDataMadre,\r\n  getDataPadre,\r\n  getDataPareja,\r\n  getIdPostu,\r\n  getIdMadre,\r\n  getIdPadre,\r\n  getIdPareja,\r\n  getEstudiosBasicos,\r\n  getLabPostu,\r\n  getLabMadre,\r\n  getLabPadre,\r\n  getLabPareja,\r\n} from \"../../api/auth\";\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //STATES QUE USO PARA RELLENAR EL PDF\r\n    this.dataPostu = getDataPostu();\r\n    this.dataMadre = getDataMadre();\r\n    this.dataPadre = getDataPadre();\r\n    this.dataPareja = getDataPareja();\r\n    this.idPostu = getIdPostu();\r\n    this.idMadre = getIdMadre();\r\n    this.idPadre = getIdPadre();\r\n    this.idPareja = getIdPareja();\r\n    this.listaEstudios = listaOtrosEstudios(getIdPostu());\r\n    this.estudios = getEstudiosLocal();\r\n    this.estudiosBasicos = getEstudiosBasicos();\r\n    this.laboralPostu = getLabPostu();\r\n    this.laboralMadre = getLabMadre();\r\n    this.laboralPadre = getLabPadre();\r\n    this.laboralPareja = getLabPareja();\r\n    this.listaPreguntasPostu = listarRespuestas(getIdPostu(), 1);\r\n    this.preguntasPostu = getRespuestasLocal(1);\r\n    this.listaPreguntasMadre = listarRespuestas(getIdMadre(), 2);\r\n    this.preguntasMadre = getRespuestasLocal(2);\r\n    this.listaPreguntasPadre = listarRespuestas(getIdPadre(), 3);\r\n    this.preguntasPadre = getRespuestasLocal(3);\r\n    this.listaPreguntasPareja = listarRespuestas(getIdPareja(), 10);\r\n    this.preguntasPareja = getRespuestasLocal(10);\r\n    this.listaParientes = listaOtrosFamiliaresPersona(getIdPostu());\r\n    this.parientes = getfliaresLocal();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ocultarVacios>\r\n        <div>\r\n          <div class=\"container\">\r\n            <td style={{ width: \"88%\" }} align={\"left\"}>\r\n              <div>\r\n                <table class=\"table\">\r\n                  <tr>\r\n                    <td>\r\n                      <h5>SOLICITUD DE INGRESOS</h5>\r\n                    </td>\r\n                    <td>\r\n                      <table>\r\n                        <tr>\r\n                          <td>\r\n                            <img\r\n                              src=\"logoArmada.jpg\"\r\n                              style={{\r\n                                width: \"100px\",\r\n                                height: \"100px\",\r\n                                marginLeft: \"40%\",\r\n                                marginRight: \"50%\",\r\n                              }}\r\n                            ></img>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <h5>COMANDO GENERAL DE LA ARMADA</h5>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <h2 style={{ textAlign: \"center\" }}>Reservado</h2>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </td>\r\n                    <td>\r\n                      <h5>FORMULARIO 04</h5>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </td>\r\n            <tr align={\"right\"} style={{ width: \"25%\", textAlign: \"left\" }}>\r\n              <div>\r\n                <table class=\"table\">\r\n                  <tr>\r\n                    <td>\r\n                      <h5>UNIDAD ORIGINADORA: ________________</h5>\r\n                    </td>\r\n                    <td>\r\n                      <h5>FECHA: ___/___/____</h5>\r\n                    </td>\r\n                    <td>\r\n                      <h5>SOL. NRO: ________________</h5>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </tr>\r\n          </div>\r\n        </div>\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion del Postulante</h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales:</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataPostu.primerNombre == \"\" ? \" block;\" : \" none;\",\r\n                }}\r\n              >\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPostu.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPostu.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPostu.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPostu.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPostu.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPostu.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPostu.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPostu.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPostu.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_postu\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPostu.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPostu.credencialNumero} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPostu.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio:</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPostu.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPostu.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPostu.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL POSTULANTE*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.cargo_funcion} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPostu.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.nombreEmpresa} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n          {/*estudios dela persona */}\r\n          <Container>\r\n            <Form>\r\n              <div>\r\n                <h3 style={{ textAlign: \"left\", pageBreakBefore: \"always\" }}>\r\n                  Educacion\r\n                </h3>\r\n\r\n                <Table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          defaultValue=\"Primaria\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Control\r\n                          value={\r\n                            this.estudiosBasicos.primeroPrimaria_nombreInstituto\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          defaultValue=\"Secundaria\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Control\r\n                          value={\r\n                            this.estudiosBasicos.primeroSecu_nombreInstituto\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          defaultValue=\"Bachillerato\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Control\r\n                          value={\r\n                            this.estudiosBasicos.cuartoBach_nombreInstituto\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n\r\n                <h3 style={{ textAlign: \"left\" }}>Otros Estudios Realizados</h3>\r\n\r\n                <Table id=\"tabla\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Años Cursados</th>\r\n                      <th>Nombre del Estudio/Capacitacion</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {(this.estudios === 0) |\r\n                    (this.estudios === null) |\r\n                    (this.estudios === undefined) ? (\r\n                      <tr>No hay Estudios ingresados</tr>\r\n                    ) : (\r\n                      map(this.estudios, (est, index) => (\r\n                        <TableRowEducacion estudio={est} key={index} />\r\n                      ))\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          {/*PREGUNTAS POSTULANTE*/}\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {/**En esta parte hago un if que controla si el array de preguntas no tiene nada cargado aun\r\n                   * muestra el mensaje que no hay preguntas, sino hace un map con la lista de preguntas y llama al\r\n                   * tableRow que yo hice mandandole los parametros del map.\r\n                   */}\r\n                  {this.preguntasPostu.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPostu, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        {/**DATOS DE LA MADRE */}\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion de la Madre</h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col\r\n                style={{\r\n                  display: this.dataMadre.primerNombre == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataMadre.primerNombre} />\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.segundoNombre == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataMadre.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.primerApellido == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataMadre.primerApellido} />\r\n              </Col>\r\n\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.segundoApellido == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataMadre.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.telefono_celular == \"0\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataMadre.telefono_celular} />\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display: this.dataMadre.cedula == \"0\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataMadre.cedula} />\r\n              </Col>\r\n\r\n              <Col\r\n                style={{\r\n                  display: this.dataMadre.apodo == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataMadre.apodo} />\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.fechaNacimiento == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataMadre.fechaNacimiento} />\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display: this.dataMadre.sexo == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataMadre.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    localStorage.getItem(\"estCivil_madre\") != null\r\n                      ? \"block\"\r\n                      : \"none\",\r\n                }}\r\n              >\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_madre\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.credencialSerie == \"\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataMadre.credencialSerie} />\r\n              </Col>\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.credencialNumero == \"0\" ? \"none\" : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataMadre.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col\r\n                style={{\r\n                  display:\r\n                    this.dataMadre.correoElectronico == \"ejemplo@mail.com\"\r\n                      ? \"none\"\r\n                      : \"block\",\r\n                }}\r\n              >\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataMadre.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      localStorage.getItem(\"paisMadre\") != null\r\n                        ? \"block\"\r\n                        : \"none\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      this.dataMadre.domicilioActual == \"\" ? \"none\" : \"block\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataMadre.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      localStorage.getItem(\"depaMadre\") != null\r\n                        ? \"block\"\r\n                        : \"none\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      localStorage.getItem(\"barrioMadre\") != null\r\n                        ? \"block\"\r\n                        : \"none\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      this.dataMadre.seccionalPolicial == \"\" ? \"none\" : \"block\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataMadre.seccionalPolicial} />\r\n                </Col>\r\n                <Col\r\n                  style={{\r\n                    display:\r\n                      this.dataMadre.domicilioAnterior == \"\" ? \"none\" : \"block\",\r\n                  }}\r\n                >\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataMadre.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL Madre*/}\r\n\r\n          <Container>\r\n            <div className=\"form-datos-personales\">\r\n              <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n\r\n              <Form.Group>\r\n                <Row>\r\n                  <Col\r\n                    style={{\r\n                      display:\r\n                        this.laboralMadre.cargo_funcion == \"\"\r\n                          ? \"none\"\r\n                          : \"block\",\r\n                    }}\r\n                  >\r\n                    <Form.Label>Cargo o Funcion</Form.Label>\r\n                    <Form.Control value={this.laboralMadre.cargo_funcion} />\r\n                  </Col>\r\n                  <Col\r\n                    style={{\r\n                      display: this.laboralMadre.ente == \"\" ? \"none\" : \"block\",\r\n                    }}\r\n                  >\r\n                    <Form.Label>Ente</Form.Label>\r\n                    <Form.Control value={this.laboralMadre.ente}></Form.Control>\r\n                  </Col>\r\n\r\n                  <Col\r\n                    style={{\r\n                      display:\r\n                        this.laboralMadre.nombreEmpresa == \"\"\r\n                          ? \"none\"\r\n                          : \"block\",\r\n                    }}\r\n                  >\r\n                    <Form.Label>Nombre de la Empresa</Form.Label>\r\n                    <Form.Control value={this.laboralMadre.nombreEmpresa} />\r\n                  </Col>\r\n                  <Col\r\n                    style={{\r\n                      display:\r\n                        this.laboralMadre.direccion == \"\" ? \"none\" : \"block\",\r\n                    }}\r\n                  >\r\n                    <Form.Label>Direccion de la Empresa</Form.Label>\r\n                    <Form.Control value={this.laboralMadre.direccion} />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n            </div>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {(this.preguntasMadre.length == 0) |\r\n                  (this.preguntasMadre == undefined) ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasMadre, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        {/**DATOS DEL PADRE */}\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion del Padre</h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPadre.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPadre.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPadre.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPadre.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPadre.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPadre.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPadre.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPadre.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPadre.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_padre\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPadre.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPadre.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPadre.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPadre.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPadre.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPadre.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL PADRE*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.cargo_funcion} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPadre.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.nombreEmpresa} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\", pageBreakBefore: \"always\" }}>\r\n                Respuestas Ingresadas:\r\n              </h3>\r\n              <Table>\r\n                <tbody>\r\n                  {this.preguntasPadre.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPadre, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        {/**DATOS DE PAREJA */}\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Informacion de Conyuge, Concubino/a , Novio/a\r\n        </h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPareja.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPareja.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPareja.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPareja.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPareja.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPareja.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPareja.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPareja.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPareja.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_pareja\")}\r\n                ></Form.Control>\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPareja.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPareja.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPareja.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPareja.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPareja.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPareja.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL PADRE*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.cargo_funcion}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.nombreEmpresa}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPareja.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {this.preguntasPareja.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPareja, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <div>\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\", pageBreakBefore: \"always\" }}>\r\n                Otros integrantes del ambito habitacional:\r\n              </h3>\r\n              <div>\r\n                {this.parientes == null ? (\r\n                  <tr>No hay Familiares ingresados</tr>\r\n                ) : (\r\n                  map(this.parientes, (fliar, index) => (\r\n                    <TableRowFamiliares pariente={fliar} key={index} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <div>\r\n          <Container>\r\n            <p>\r\n              CERTIFICO, que las declaraciones que ha brindado revisten al\r\n              carácter de DECLARACIÓN JURADA, y que las mismas son verdaderas,\r\n              completas y correctas, según mi mejor saber y entender, y que las\r\n              he hecho de buena fé, y si se comprobara por parte de la Autoridad\r\n              Naval , falsedad y omisión intencional, podré ser automáticamente\r\n              eliminado como Posstulante a ingreso a la Armada Nacional,\r\n              aceptando la aplicación del ARTÍCULO 239 DEL CODIGO PENAL,\r\n              FALSIFICACIÓN IDEOLÓGICA POR UN PARTICULAR;\"El que, con motivo del\r\n              otorgamiento o formalización de un documento Público, ante un\r\n              funcionario Público, prestare declaración falsa sobre su\r\n              identidad, o estado, o cualquier otra circunstancia del hecho,\r\n              será castigado con tres a veinticuatro meses de Prisión\"\r\n            </p>\r\n            <td>\r\n              <h5>FECHA:</h5>\r\n            </td>\r\n            <td>\r\n              <h5>_____/_____/_________</h5>\r\n            </td>\r\n\r\n            <div style={{ padding: \"10px\", textAlign: \"right\" }}>\r\n              <h5>FIRMA ....................................</h5>\r\n              <p style={{ marginLeft: \"100px\" }}>\r\n                {this.dataPostu.primerNombre +\r\n                  \" \" +\r\n                  this.dataPostu.primerApellido}\r\n              </p>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container>\r\n          <div>\r\n            <td>\r\n              <h5>\r\n                FIRMA:______________________________ACLARACIÓN____________________________MATRÍCULA_________\r\n              </h5>\r\n            </td>\r\n            <p>\r\n              <strong>\r\n                De quien controló primariamente el formulario completo.\r\n              </strong>\r\n            </p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a\r\n          href=\"#\"\r\n          onClick={(e) => {\r\n            localStorage.clear();\r\n            window.location = \"/\";\r\n          }}\r\n          class=\"btn btn-danger\"\r\n        >\r\n          ELIMINAR DATOS PERSONALES\r\n        </a>\r\n        <a\r\n          href=\"#\"\r\n          onClick={(e) => {\r\n            window.location = \"/\";\r\n          }}\r\n          class=\"btn btn-info\"\r\n        >\r\n          Volver al inicio\r\n        </a>\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <a href=\"#\" class=\"btn btn-success descargar\">\r\n              DESCARGAR PDF\r\n            </a>\r\n          )}\r\n          content={() => this.componentRef}\r\n        />\r\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n\r\n/*function ocultarVacios() {\r\n  document.querySelectorAll(\".col>input\").forEach((e) => {\r\n    if (e.value == \"\") {\r\n      e.parentNode.style.display = \"none\";\r\n    }\r\n  });\r\n}*/\r\n",["336","337"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\TableRowFamiliares.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\Educacion.js",["338","339","340","341","342","343","344"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\FormPostulanteEducacion.js",[],["345","346"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\index.js",["347","348","349","350"],"import React from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Footer from \"./components/Layout/Footer\";\nimport Header from \"./components/Layout/Header\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Pdf from \"./components/Pdf/Pdf\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/*ReactDOM.render(\n    <Header />,\n   <App />,\n    <Footer />,\n   document.getElementById(\"root\")\n );*/\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Footer.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Header.js",["351","352","353"],"import React from \"react\";\r\nimport { Nav, Navbar, Form, FormControl, Button } from \"react-bootstrap\";\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">Formulario 04</Navbar.Brand>\r\n        <Nav className=\"mr-auto\"></Nav>\r\n      </Navbar>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\Routing.js",["354"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { map } from \"lodash\";\r\nimport configRouting from \"./configRouting\";\r\n\r\nexport default function Routing() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {map(configRouting, (route, index) => (\r\n          <Route key={index} path={route.path} exact={route.exact}>\r\n            <route.page />\r\n          </Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\Index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\tablas.js",["355","356","357"],"import {\r\n  API_HOST,\r\n  ESTUDIOS,\r\n  RESP_POSTU,\r\n  RESP_MADRE,\r\n  RESP_PADRE,\r\n  RESP_PAREJA,\r\n  FAMILIARES,\r\n} from \"../utils/constant\";\r\n\r\nexport function getEstudiosPersona(idPersona) {\r\n  const url = `${API_HOST}estudios/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n/*esto lo uso para formar el pdf*/\r\nexport function listaOtrosEstudios(id) {\r\n  var lista = [];\r\n  getEstudiosPersona(id).then((response) => {\r\n    lista = formatModel(response.data);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModel(estudios) {\r\n  //lista temporal\r\n  const estudiosTemp = [];\r\n\r\n  estudios.forEach((estudio) => {\r\n    estudiosTemp.push({\r\n      //creo el formato\r\n      id: estudio.id,\r\n      nombreInstituto: estudio.nombreInstituto,\r\n      anioEstudio: estudio.anioEstudio,\r\n    });\r\n  });\r\n  localStorage.setItem(ESTUDIOS, JSON.stringify(estudiosTemp));\r\n  return;\r\n}\r\n\r\nexport function getEstudiosLocal() {\r\n  var guardado = localStorage.getItem(ESTUDIOS);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function getRespuestasPersona(idPersona) {\r\n  const url = `${API_HOST}respuestaPersona/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function listarRespuestas(id, tipoPer) {\r\n  var lista = [];\r\n  getRespuestasPersona(id).then((response) => {\r\n    lista = formatModelResp(response.data, tipoPer);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModelResp(respuestas, tipoPer) {\r\n  //lista temporal\r\n  const respuestasTemp = [];\r\n\r\n  respuestas.forEach((respuesta) => {\r\n    respuestasTemp.push({\r\n      //creo el formato\r\n      idPregunta: respuesta.pregunta_id,\r\n      idRespuesta: respuesta.id,\r\n      textoPregunta: respuesta.textoPregunta,\r\n      respuesta: respuesta.respuesta,\r\n    });\r\n  });\r\n\r\n  switch (tipoPer) {\r\n    case 1:\r\n      localStorage.setItem(RESP_POSTU, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 2:\r\n      localStorage.setItem(RESP_MADRE, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 3:\r\n      localStorage.setItem(RESP_PADRE, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 10:\r\n      localStorage.setItem(RESP_PAREJA, JSON.stringify(respuestasTemp));\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nexport function getRespuestasLocal(tipoPer) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      var guardado = localStorage.getItem(RESP_POSTU);\r\n      break;\r\n    case 2:\r\n      var guardado = localStorage.getItem(RESP_MADRE);\r\n\r\n      break;\r\n    case 3:\r\n      var guardado = localStorage.getItem(RESP_PADRE);\r\n\r\n      break;\r\n    case 10:\r\n      var guardado = localStorage.getItem(RESP_PAREJA);\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n/**/\r\n\r\nexport function getOtrosFamiliaresPersona(idPersona) {\r\n  const url = `${API_HOST}pariente/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function listaOtrosFamiliaresPersona(id) {\r\n  var lista = [];\r\n  getOtrosFamiliaresPersona(id).then((response) => {\r\n    lista = formatModelOtrosFliares(response.data);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModelOtrosFliares(fliares) {\r\n  //lista temporal\r\n  const fliaresTemp = [];\r\n\r\n  fliares.forEach((fliar) => {\r\n    fliaresTemp.push({\r\n      //creo el formato\r\n      id: fliar.familiar_id,\r\n      primerNombre: fliar.primerNombre,\r\n      primerApellido: fliar.primerApellido,\r\n      fechaNacimiento: fliar.fechaNacimiento,\r\n      tipo_persona_id: fliar.tipo_persona_id,\r\n      tipoPersona: fliar.nombre,\r\n      cedula: fliar.cedula,\r\n    });\r\n  });\r\n  localStorage.setItem(FAMILIARES, JSON.stringify(fliaresTemp));\r\n  return;\r\n}\r\nexport function getfliaresLocal() {\r\n  var guardado = localStorage.getItem(FAMILIARES);\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function getPreguntasApi() {\r\n  const url = `${API_HOST}preguntas`;\r\n\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function setPreguntasPostu(data) {\r\n  return localStorage.setItem(RESP_POSTU, data);\r\n}\r\n\r\nexport function getPreguntasPostu() {\r\n  var guardado = localStorage.getItem(RESP_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasMadre(data) {\r\n  return localStorage.setItem(RESP_MADRE, data);\r\n}\r\n\r\nexport function getPreguntasMadre() {\r\n  var guardado = localStorage.getItem(RESP_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasPadre(data) {\r\n  return localStorage.setItem(RESP_PADRE, data);\r\n}\r\n\r\nexport function getPreguntasPadre() {\r\n  var guardado = localStorage.getItem(RESP_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasPareja(data) {\r\n  return localStorage.setItem(RESP_PAREJA, data);\r\n}\r\n\r\nexport function getPreguntasPareja() {\r\n  var guardado = localStorage.getItem(RESP_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\auth.js",["358","359","360","361"],"import {\r\n  API_HOST,\r\n  ID_POSTU,\r\n  ID_MADRE,\r\n  ID_PAREJA,\r\n  ID_PADRE,\r\n  ID_OTRO_FLIAR,\r\n  DATA_POSTU,\r\n  DATA_MADRE,\r\n  DATA_PADRE,\r\n  DATA_PAREJA,\r\n  EST_BASICO,\r\n  LAB_POSTU,\r\n  LAB_MADRE,\r\n  LAB_PADRE,\r\n  LAB_PAREJA,\r\n} from \"../utils/constant\";\r\n\r\n/**LIMPIAR ESTA CLASE POR FAVOR */\r\nexport function crearPostulante(persona) {\r\n  const url = `${API_HOST}persona`;\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function updatePostulante(persona, id) {\r\n  const url = `${API_HOST}persona/${id}`;\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearFamiliarPostulante(persona) {\r\n  const url = `${API_HOST}personaFamiliar`;\r\n\r\n  //console.log(persona);\r\n  // console.log(url);\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  //console.log(personaTemp);\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function updateFamiliarPostulante(persona, idPersona) {\r\n  const url = `${API_HOST}personaFamiliar/${idPersona}`;\r\n\r\n  //console.log(persona);\r\n  // console.log(url);\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  //console.log(personaTemp);\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearOcupacion(ocupacion) {\r\n  const url = `${API_HOST}ocupacion`;\r\n  console.log(ocupacion);\r\n  console.log(url);\r\n\r\n  const ocupacionTemp = {\r\n    ...ocupacion,\r\n    cargo_funcion: ocupacion.cargo_funcion.toLowerCase(),\r\n    nombreEmpresa: ocupacion.nombreEmpresa.toLowerCase(),\r\n    direccion: ocupacion.direccion.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(ocupacionTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function updateOcupacion(ocupacion, idOcupacion) {\r\n  const url = `${API_HOST}ocupacion/${idOcupacion}`;\r\n  console.log(ocupacion);\r\n\r\n  const ocupacionTemp = {\r\n    ...ocupacion,\r\n    cargo_funcion: ocupacion.cargo_funcion.toLowerCase(),\r\n    nombreEmpresa: ocupacion.nombreEmpresa.toLowerCase(),\r\n    direccion: ocupacion.direccion.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(ocupacionTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearEstudiosBasicos(estudios) {\r\n  const url = `${API_HOST}estudiosBasicos`;\r\n  console.log(estudios);\r\n  console.log(url);\r\n  const estudiosTemp = {\r\n    ...estudios,\r\n    primeroPrimaria_nombreInstituto: estudios.primeroPrimaria_nombreInstituto.toLowerCase(),\r\n  };\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(estudiosTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearEstudio(estudio) {\r\n  const url = `${API_HOST}estudio`;\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(estudio),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearOtroFliar(familiar) {\r\n  const url = `${API_HOST}familiar`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(familiar),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearParentesco(parientes) {\r\n  const url = `${API_HOST}parentesco`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(parientes),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearRespuesta(respuesta) {\r\n  const url = `${API_HOST}respuesta`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(respuesta),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function updateRespuesta(respuesta, idRespuesta) {\r\n  const url = `${API_HOST}respuesta/${idRespuesta}`;\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(respuesta),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function setIdsApi(tipoPer, id) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      localStorage.setItem(ID_POSTU, id);\r\n      break;\r\n    case 2:\r\n      localStorage.setItem(ID_MADRE, id);\r\n      break;\r\n    case 3:\r\n      localStorage.setItem(ID_PADRE, id);\r\n      break;\r\n    case 10:\r\n      localStorage.setItem(ID_PAREJA, id);\r\n      break;\r\n\r\n    default:\r\n      localStorage.setItem(ID_OTRO_FLIAR, id);\r\n      break;\r\n  }\r\n}\r\n\r\nexport function getSuId(tipoPer) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      return localStorage.getItem(ID_POSTU);\r\n      break;\r\n    case 2:\r\n      return localStorage.getItem(ID_MADRE);\r\n      break;\r\n    case 3:\r\n      return localStorage.getItem(ID_PADRE);\r\n      break;\r\n    case 10:\r\n      return localStorage.getItem(ID_PAREJA);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function getIdPostu() {\r\n  return localStorage.getItem(ID_POSTU);\r\n}\r\nexport function getIdMadre() {\r\n  return localStorage.getItem(ID_MADRE);\r\n}\r\nexport function getIdPadre() {\r\n  return localStorage.getItem(ID_PADRE);\r\n}\r\nexport function getIdPareja() {\r\n  return localStorage.getItem(ID_PAREJA);\r\n}\r\nexport function getIdOtro() {\r\n  return localStorage.getItem(ID_OTRO_FLIAR);\r\n}\r\n\r\nexport function comboPaises() {\r\n  const url = `${API_HOST}paises`;\r\n\r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(),\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\n/**ESTA HAY QUE SACARLO DE ACA */\r\nexport function setDataPostu(data) {\r\n  return localStorage.setItem(DATA_POSTU, data);\r\n}\r\n\r\nexport function getDataPostu() {\r\n  var guardado = localStorage.getItem(DATA_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setDataMadre(data) {\r\n  return localStorage.setItem(DATA_MADRE, data);\r\n}\r\n\r\nexport function getDataMadre() {\r\n  var guardado = localStorage.getItem(DATA_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\nexport function setDataPadre(data) {\r\n  return localStorage.setItem(DATA_PADRE, data);\r\n}\r\n\r\nexport function getDataPadre() {\r\n  var guardado = localStorage.getItem(DATA_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\nexport function setDataPareja(data) {\r\n  return localStorage.setItem(DATA_PAREJA, data);\r\n}\r\n\r\nexport function getDataPareja() {\r\n  var guardado = localStorage.getItem(DATA_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setEstudiosBasicos(data) {\r\n  return localStorage.setItem(EST_BASICO, data);\r\n}\r\n\r\nexport function getEstudiosBasicos() {\r\n  var guardado = localStorage.getItem(EST_BASICO);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPostu(data) {\r\n  return localStorage.setItem(LAB_POSTU, data);\r\n}\r\n\r\nexport function getLabPostu() {\r\n  var guardado = localStorage.getItem(LAB_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabMadre(data) {\r\n  return localStorage.setItem(LAB_MADRE, data);\r\n}\r\n\r\nexport function getLabMadre() {\r\n  var guardado = localStorage.getItem(LAB_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPadre(data) {\r\n  return localStorage.setItem(LAB_PADRE, data);\r\n}\r\n\r\nexport function getLabPadre() {\r\n  var guardado = localStorage.getItem(LAB_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPareja(data) {\r\n  return localStorage.setItem(LAB_PAREJA, data);\r\n}\r\n\r\nexport function getLabPareja() {\r\n  var guardado = localStorage.getItem(LAB_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\index.js",[],["362","363"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\index.js",[],["364","365"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\FormOtrosFamiliares.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\FormParejaPreguntas.js",["366"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormParejaPreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Segundo paso: Preguntas</h3>\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralPareja\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/otrosFliares\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n",["367","368"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\FormPareja.js",["369"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPareja() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\FormPadreLaboral.js",["370"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadreLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Segundo paso: Informacion laboral</h3>\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/datosPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\FormMadrePreguntas.js",["371"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormMadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(2);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de la Madre</h2>\r\n        <h3>Tercer paso: Preguntas</h3>\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralMadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\Preguntas.js",["372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useState, useEffect } from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { Form, Button, Table, Jumbotron, Container } from \"react-bootstrap\";\r\n\r\nimport { getPreguntasApi, getRespuestasPersona } from \"../../../../api/tablas\";\r\n\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\n\r\nimport TableRow from \"../TableRow/index\";\r\nimport { getSuId } from \"../../../../api/auth\";\r\n\r\nexport default function Preguntas(props) {\r\n  const { tipoPerstate } = props;\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [idPersona, setidpersona] = useState(getSuId(tipoPerstate));\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentModal, setContentModal] = useState(null);\r\n  const [respuesta, setrespuestas] = useState([]);\r\n\r\n  //useEffect que se  encarga de cargar las preguntas y guardarlas en un map para cargarlo en la tabla\r\n  useEffect(() => {\r\n    getPreguntasApi()\r\n      .then((response) => {\r\n        let listaPreg = formatModel(\r\n          response.data,\r\n          tipoPerstate,\r\n          getSuId(tipoPerstate)\r\n        );\r\n        console.log(\"Lista preg\");\r\n        console.log(listaPreg);\r\n        setPreguntas(listaPreg);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRespuestasPersona(idPersona)\r\n      .then((response) => {\r\n        let listaPreg = formatModelRespuesta(\r\n          response.data,\r\n          getSuId(tipoPerstate)\r\n        );\r\n        console.log(\"lista resp\");\r\n        console.log(listaPreg);\r\n        setrespuestas(listaPreg);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <Jumbotron>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Pregunta</th>\r\n\r\n                  <th>Respuestas</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/**En esta parte hago un if que controla si el array de preguntas no tiene nada cargado aun\r\n                 * muestra el mensaje que no hay preguntas, sino hace un map con la lista de preguntas y llama al\r\n                 * tableRow que yo hice mandandole los parametros del map.\r\n                 */}\r\n                {respuesta.length == 0 ? (\r\n                  preguntas.length == 0 ? (\r\n                    <tr>No hay Respuestas ingresadas aun</tr>\r\n                  ) : (\r\n                    map(preguntas, (preg, index) => (\r\n                      <TableRow\r\n                        pregunta={preg}\r\n                        key={index}\r\n                        idPersona={idPersona}\r\n                        tipoPerstate={tipoPerstate}\r\n                      />\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  map(respuesta, (preg, index) => (\r\n                    <TableRow\r\n                      pregunta={preg}\r\n                      key={index}\r\n                      idPersona={idPersona}\r\n                      tipoPerstate={tipoPerstate}\r\n                    />\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Jumbotron>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**Esta funcion se encarga de dar formato a la respuesta del servidor cuando pido todas las preguntas segun el tipo de persona\r\n * respuesta del servidor= preg\r\n * tipoPerState = tipo de persona\r\n * idPersona = obtengo el id de persona desde el localStorage esto facilita el insert de la respuesta posteriormente xq ya tengo el id de la persona\r\n */\r\nfunction formatModel(preg, tipoPerstate, idPersona) {\r\n  //lista temporal\r\n  const preguntasTemp = [];\r\n  //si es postulante\r\n  if (tipoPerstate == 1) {\r\n    preg.forEach((pregunta) => {\r\n      //tomo las preguntas que son para el tipoPer 1 (postulante)\r\n      if (pregunta.tipo_persona_id == 1) {\r\n        preguntasTemp.push({\r\n          //creo el formato\r\n          id: pregunta.id,\r\n          texto: pregunta.textoPregunta,\r\n          tipo_persona: pregunta.tipo_persona_id,\r\n          persona_id: idPersona,\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    preg.forEach((pregunta) => {\r\n      //si la pregunta es para  cualquiera persona menos postulante\r\n      if (pregunta.tipo_persona_id != 1) {\r\n        preguntasTemp.push({\r\n          //creo formato\r\n          id: pregunta.id,\r\n          texto: pregunta.textoPregunta,\r\n          tipo_persona: pregunta.tipo_persona_id,\r\n          persona_id: idPersona,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return preguntasTemp;\r\n}\r\n\r\nfunction formatModelRespuesta(resp, idPersona) {\r\n  //lista temporal\r\n  const respuestasTemp = [];\r\n  //si es postulante\r\n\r\n  resp.forEach((respuesta) => {\r\n    //tomo las preguntas que son para el tipoPer 1 (postulante)\r\n\r\n    respuestasTemp.push({\r\n      //creo el formato\r\n      idPregunta: respuesta.pregunta_id,\r\n      idRespuesta: respuesta.id,\r\n      texto: respuesta.textoPregunta,\r\n      persona_id: idPersona,\r\n      respuesta: respuesta.respuesta,\r\n    });\r\n  });\r\n\r\n  return respuestasTemp;\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\validations.js",["385","386","387","388","389","390","391"],"export function isEmailValid(email) {\n  // eslint-disable-next-line no-useless-escape\n\n  const emailValid = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n  return emailValid.test(String(email).toLowerCase());\n}\n\nexport function sinCaracteresEspeciales(content) {\n  const validacion = /^[A-Za-z0-9\\-! ,ñ@\\.\\(\\)]+$/;\n\n  return validacion.test(String(content)).toLowerCase();\n}\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\AgregarOtrosFamiliares.js",["392","393","394","395","396","397","398","399"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { values, size } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  crearOtroFliar,\r\n  setIdsApi,\r\n  getIdPostu,\r\n  getIdOtro,\r\n  crearParentesco,\r\n} from \"../../../../api/auth\";\r\nimport { getTipoPersonaApi } from \"../../../../api/combos\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport range from \"lodash/range\";\r\n\r\nexport default function AgregarOtrosFamiliares(props) {\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue());\r\n  const { setShowModal, contador, setcontador } = props;\r\n\r\n  useEffect(() => {\r\n    getTipoPersonaApi()\r\n      .then((response) => {\r\n        let lista = response.data;\r\n        let opciones = lista.map((tipopersona) => {\r\n          return { id: `${tipopersona.id}`, nombre: `${tipopersona.nombre}` };\r\n        });\r\n        cargarCombos(opciones, \"select_form_personas\");\r\n        return { opciones: opciones };\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  /*DATE PICKER PERSONALIZADO**********************************************/\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  const years = range(1920, new Date().getFullYear() + 1, 1);\r\n  const months = [\r\n    \"Enero\",\r\n    \"Febrero\",\r\n    \"Marzo\",\r\n    \"Abril\",\r\n    \"Mayo\",\r\n    \"Junio\",\r\n    \"Julio\",\r\n    \"Agosto\",\r\n    \"Setiembre\",\r\n    \"Octubre\",\r\n    \"Noviembre\",\r\n    \"Diciembre\",\r\n  ];\r\n\r\n  function formatearDate(startDate) {\r\n    let year = startDate.getFullYear();\r\n    let month = \"\" + (startDate.getMonth() + 1);\r\n    let day = \"\" + startDate.getDate();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    let fechaFinal = year + \"-\" + month + \"-\" + day;\r\n    return fechaFinal;\r\n  }\r\n  /*DATE PICKER PERSONALIZADO**********************************************/\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(false);\r\n    //lo siguiente se encarga de recorrer el form y ver si tiene el campo relleno o no\r\n    //si el valid count tiene tiene el mismo numero que el total de keys del formdata entonces significa que tiene todos los campos rellenados\r\n\r\n    setGuardadoLoading(true);\r\n    crearOtroFliar(formData)\r\n      .then((response) => {\r\n        if (response.code) {\r\n          toast.warning(response.message);\r\n        } else {\r\n          toast.success(\"Registro correcto\");\r\n          setcontador(contador + 1);\r\n          setFormData(initialFormValue());\r\n          setIdsApi(0, response.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error del servidor\");\r\n      })\r\n      .finally(() => {\r\n        setGuardadoLoading(false);\r\n        crearParentesco(jsonParientes()).then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Agregar nuevo Familiar</h2>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Parentezco</th>\r\n              <th>Primer nombre</th>\r\n              <th>Primer Apellido</th>\r\n              <th>CI (Sin puntos ni guión)</th>\r\n              <th>Fecha de Nacimiento</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <Form.Control\r\n                  id=\"select_form_personas\"\r\n                  as=\"select\"\r\n                  defaultValue=\"Seleccione\"\r\n                  value={formData.tipo_persona_id}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      tipo_persona_id: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"\"> Seleccione</option>\r\n                </Form.Control>\r\n              </th>\r\n\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.primerNombre}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      primerNombre: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.primerApellido}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      primerApellido: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.cedula}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      cedula: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                <DatePicker\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  renderCustomHeader={({\r\n                    date,\r\n                    changeYear,\r\n                    changeMonth,\r\n                    decreaseMonth,\r\n                    increaseMonth,\r\n                    prevMonthButtonDisabled,\r\n                    nextMonthButtonDisabled,\r\n                  }) => (\r\n                    <div\r\n                      style={{\r\n                        margin: 10,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <button\r\n                        onClick={decreaseMonth}\r\n                        disabled={prevMonthButtonDisabled}\r\n                      >\r\n                        {\"<\"}\r\n                      </button>\r\n                      <select\r\n                        value={date.getFullYear()}\r\n                        onChange={({ target: { value } }) => changeYear(value)}\r\n                      >\r\n                        {years.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      <select\r\n                        value={months[date.getMonth()]}\r\n                        onChange={({ target: { value } }) =>\r\n                          changeMonth(months.indexOf(value))\r\n                        }\r\n                      >\r\n                        {months.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      <button\r\n                        onClick={increaseMonth}\r\n                        disabled={nextMonthButtonDisabled}\r\n                      >\r\n                        {\">\"}\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  selected={startDate}\r\n                  onChange={(date) =>\r\n                    setStartDate(date) |\r\n                    setFormData({\r\n                      ...formData,\r\n                      fechaNacimiento: formatearDate(date),\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button variant=\"agregar\" type=\"submit\">\r\n          <FontAwesomeIcon icon={faSave} />\r\n          Guardar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialFormValue() {\r\n  return {\r\n    primerNombre: \"\",\r\n    primerApellido: \"\",\r\n    fechaNacimiento: \"\",\r\n    cedula: \"\",\r\n    tipo_persona_id: \"\",\r\n  };\r\n}\r\n\r\nfunction jsonParientes() {\r\n  return {\r\n    postulante_id: getIdPostu(),\r\n    familiar_id: getIdOtro(),\r\n  };\r\n}\r\n\r\nfunction cargarCombos(listaOpciones, idComponente) {\r\n  var options = listaOpciones;\r\n  var listaACargar = document.getElementById(idComponente);\r\n\r\n  for (var i in options) {\r\n    //saco las opciones de los familiares madre padre y pareja y postulante\r\n    if (\r\n      (options[i].id != 2) &\r\n      (options[i].id != 3) &\r\n      (options[i].id != 10) &\r\n      (options[i].id != 14) &\r\n      (options[i].id != 1)\r\n    ) {\r\n      // creamos un elemento de tipo option\r\n      var opt = document.createElement(\"option\");\r\n      // le damos un valor\r\n      opt.value = options[i].id;\r\n      // le ponemos un texto\r\n      opt.textContent = options[i].nombre;\r\n      // lo agregamos al select\r\n      listaACargar.options.add(opt);\r\n    }\r\n  }\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\OtrosEstudios.js",["400","401","402"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { values, size } from \"lodash\";\r\nimport { listaOtrosEstudios } from \"../../../../api/tablas\";\r\nimport { crearEstudio, getIdPostu } from \"../../../../api/auth\";\r\n\r\nexport default function OtrosEstudios(props) {\r\n  //state que guarda el id del postulante en cero pero lo uso para cambiarlo una vez que di submit en datos personales\r\n  const [idPostulante, setIdPostulante] = useState(getIdPostu());\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue());\r\n  const { setShowModal } = props;\r\n\r\n  //recibo el id de postulante (del local storage y cambio mi estado para luego asignarlo al form data)\r\n  useEffect(() => {\r\n    setIdPostulante(getIdPostu());\r\n    setFormData({\r\n      ...formData,\r\n      persona_id: getIdPostu(),\r\n    });\r\n\r\n    return getIdPostu();\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(false);\r\n    let validCount = 0;\r\n    values(formData).some((value) => {\r\n      value && validCount++;\r\n      return null;\r\n    });\r\n\r\n    if (validCount !== size(formData)) {\r\n      toast.warning(\"Faltan campos que completar\");\r\n    } else {\r\n      setGuardadoLoading(true);\r\n      crearEstudio(formData)\r\n        .then((response) => {\r\n          if (response.code) {\r\n            toast.warning(response.message);\r\n          } else {\r\n            toast.success(\"Registro correcto\");\r\n            listaOtrosEstudios(getIdPostu());\r\n            setFormData(initialFormValue());\r\n          }\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Error del servidor\");\r\n        })\r\n        .finally(() => {\r\n          setGuardadoLoading(false);\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Agregar nuevo Estudio</h2>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Estudio/Capacitacion</th>\r\n              <th>Años Cursados</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  value={formData.nombreInstituto}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      nombreInstituto: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                {\" \"}\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Años Cursados\"\r\n                  value={formData.anioEstudio}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      anioEstudio: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n        <Button variant=\"agregar\" type=\"submit\">\r\n          <FontAwesomeIcon icon={faSave} />\r\n          Guardar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialFormValue() {\r\n  return {\r\n    anioEstudio: \"\",\r\n    nombreInstituto: \"\",\r\n    tipo_estudio_id: \"4\",\r\n    persona_id: \"\",\r\n  };\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\FormPostulante.js",["403"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"./FormPostulante.scss\";\r\n\r\nexport default function FormPostulante() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/educacionPostulante\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\nver el if del boton\r\n\r\ndisabled={!GUARDE_DATOS_POSTU == 0 ? \"false\" : guardadoBoton}\r\n*/\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\DatosPersonales.js",["404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\FormPostulanteLaboral.js",["429"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./FormPostulanteLaboral.scss\";\r\n\r\nexport default function FormPostulanteLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Tercer paso: Informacion laboral</h3>\r\n\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/educacionPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPostulante\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\Laboral.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\FormPostulantePreguntas.js",["450"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./FormPostulantePreguntas.scss\";\r\n\r\nexport default function FormPostulantePreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Cuarto paso: Preguntas</h3>\r\n\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n        <Link to=\"/laboralPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosMadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n",["451","452"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\FormMadre.js",["453"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormMadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(2);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de la Madre</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralMadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span> Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\FormMadreLaboral.js",["454"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormMadreLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(2);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de la Madre</h2>\r\n        <h3>Segundo paso: Informacion laboral</h3>\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/datosMadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasMadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\FormPadre.js",["455","456"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasMadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\FormPadrePreguntas.js",["457"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadrePreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Tercer paso: Preguntas</h3>\r\n\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\FormParejaLaboral.js",["458"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormParejaLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Segundo paso: Informacion laboral</h3>\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/datosPareja\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n",["459","460"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\TableRowPregPDF.js",["461"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n//este componente se usa para cargar dinamicamente las preguntas que traigo de la base\r\nexport default function TableRowPregPDF(props) {\r\n  const { pregunta } = props;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{pregunta.textoPregunta}</td>\r\n        <td>\r\n          <Form.Control value={pregunta.respuesta} />\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\constant.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\combos.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\BasicModal.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\InicioForm.js",["462","463","464"],"//rfc para crear componente rapido\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Routing from \"../../routes/Routing\";\r\n\r\nexport default function InicioForm() {\r\n  return (\r\n    <div>\r\n      <Routing />\r\n    </div>\r\n  );\r\n}\r\n/*\r\n      <FormPostulante />\r\n      <FormMadre />\r\n      <FormPadre />\r\n      <FormPareja />\r\n      <Container>\r\n        <h2>Quinto Paso: Otros Familiares</h2>\r\n        <OtrosFamiliares />\r\n      </Container> */\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\TableRow.js",["465","466","467","468","469","470"],"import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport {\r\n  setPreguntasPostu,\r\n  setPreguntasMadre,\r\n  setPreguntasPadre,\r\n  setPreguntasPareja,\r\n} from \"../../../../api/tablas\";\r\nimport { crearRespuesta, updateRespuesta } from \"../../../../api/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getRespuestasPersona, listarRespuestas } from \"../../../../api/tablas\";\r\n//este componente se usa para cargar dinamicamente las preguntas que traigo de la base\r\nexport default function TableRow(props) {\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  const { pregunta, idPersona, tipoPerstate } = props;\r\n  const [formData, setFormData] = useState(\r\n    initialFormValue(idPersona, pregunta.id, pregunta)\r\n  );\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!tieneID(pregunta)) {\r\n      crearRespuesta(formData)\r\n        .then((response) => {\r\n          if (response.code) {\r\n            toast.warning(response.message);\r\n          } else {\r\n            setGuardadoLoading(true);\r\n            toast.success(\"Registro correcto\");\r\n            listarRespuestas(idPersona, tipoPerstate);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Error del servidor\");\r\n        })\r\n        .finally(() => {\r\n          setGuardadoLoading(false);\r\n        });\r\n    } else {\r\n      updateRespuesta(formData, pregunta.idRespuesta)\r\n        .then((response) => {\r\n          if (response.code) {\r\n            toast.warning(response.message);\r\n          } else {\r\n            setGuardadoLoading(true);\r\n            toast.success(\"Actualizacion correcta\");\r\n            listarRespuestas(idPersona, tipoPerstate);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Error del servidor\");\r\n        })\r\n        .finally(() => {\r\n          setGuardadoLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{pregunta.texto}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Respuesta\"\r\n            value={formData.respuesta}\r\n            onChange={\r\n              (e) =>\r\n                setFormData({\r\n                  ...formData,\r\n                  respuesta: e.target.value,\r\n                }) /*| guardandoLocal(tipoPerstate, formData)*/\r\n            }\r\n            /*onKeyUp={() => guardandoLocal(tipoPerstate, formData)}*/\r\n          />\r\n        </td>\r\n        <td>\r\n          <Button variant=\"agregar\" type=\"button\" onClick={onSubmit}>\r\n            <FontAwesomeIcon icon={faSave} /> Guardar\r\n          </Button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction initialFormValue(personaId, preguntaId, pregunta) {\r\n  if (pregunta.respuesta != null) {\r\n    return {\r\n      respuesta: pregunta.respuesta,\r\n      observaciones: \"\",\r\n      persona_id: personaId,\r\n      pregunta_id: preguntaId,\r\n    };\r\n  } else {\r\n    return {\r\n      respuesta: \"\",\r\n      observaciones: \"\",\r\n      persona_id: personaId,\r\n      pregunta_id: preguntaId,\r\n    };\r\n  }\r\n}\r\nfunction tieneID(pregunta) {\r\n  if (pregunta.idRespuesta != null) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/*\r\nfunction guardandoLocal(tipoPerstate, formData) {\r\n  switch (tipoPerstate) {\r\n    case 1:\r\n      setPreguntasPostu(JSON.stringify(formData));\r\n      break;\r\n    case 2:\r\n      setPreguntasMadre(JSON.stringify(formData));\r\n      break;\r\n    case 3:\r\n      setPreguntasPadre(JSON.stringify(formData));\r\n      break;\r\n    case 10:\r\n      setPreguntasPareja(JSON.stringify(formData));\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction llenarDelStorage(campo, defval, tipoPerstate) {\r\n  switch (tipoPerstate) {\r\n    case 1:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"respuestaPostu\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n    case 2:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"respuestaMadre\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n\r\n    case 3:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"respuestaPadre\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n\r\n    case 10:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"respuestaPareja\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n    default:\r\n      break;\r\n  }\r\n  return defval;\r\n}\r\n*/\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\configRouting.js",["471"],"import FormPostulante from \"../components/Forms/FormPostulante/index\";\r\nimport FormPostulanteEducacion from \"../components/Forms/FormPostulanteEducacion/index\";\r\nimport FormPostulanteLaboral from \"../components/Forms/FormPostulanteLaboral/index\";\r\nimport FormPostulantePreguntas from \"../components/Forms/FormPostulantePreguntas/index\";\r\nimport FormMadre from \"../components/Forms/FormMadre/index\";\r\nimport FormMadreLaboral from \"../components/Forms/FormMadreLaboral/index\";\r\nimport FormMadrePreguntas from \"../components/Forms/FormMadrePreguntas/index\";\r\nimport FormPadre from \"../components/Forms/FormPadre/index\";\r\nimport FormPadreLaboral from \"../components/Forms/FormPadreLaboral/index\";\r\nimport FormPadrePreguntas from \"../components/Forms/FormPadrePreguntas/index\";\r\nimport FormPareja from \"../components/Forms/FormPareja/index\";\r\nimport FormParejaLaboral from \"../components/Forms/FormParejaLaboral/index\";\r\nimport FormParejaPreguntas from \"../components/Forms/FormParejaPreguntas/index\";\r\nimport FormOtrosFamiliares from \"../components/Forms/FormOtrosFamiliares/index\";\r\nimport Pdf from \"../components/Pdf/Pdf\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    page: FormPostulante,\r\n  },\r\n\r\n  {\r\n    path: \"/educacionPostulante\",\r\n    exact: true,\r\n    page: FormPostulanteEducacion,\r\n  },\r\n\r\n  {\r\n    path: \"/laboralPostulante\",\r\n    exact: true,\r\n    page: FormPostulanteLaboral,\r\n  },\r\n\r\n  {\r\n    path: \"/preguntasPostulante\",\r\n    exact: true,\r\n    page: FormPostulantePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosMadre\",\r\n    exact: true,\r\n    page: FormMadre,\r\n  },\r\n  {\r\n    path: \"/laboralMadre\",\r\n    exact: true,\r\n    page: FormMadreLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasMadre\",\r\n    exact: true,\r\n    page: FormMadrePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosPadre\",\r\n    exact: true,\r\n    page: FormPadre,\r\n  },\r\n  {\r\n    path: \"/laboralPadre\",\r\n    exact: true,\r\n    page: FormPadreLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasPadre\",\r\n    exact: true,\r\n    page: FormPadrePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosPareja\",\r\n    exact: true,\r\n    page: FormPareja,\r\n  },\r\n  {\r\n    path: \"/laboralPareja\",\r\n    exact: true,\r\n    page: FormParejaLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasPareja\",\r\n    exact: true,\r\n    page: FormParejaPreguntas,\r\n  },\r\n  {\r\n    path: \"/otrosFliares\",\r\n    exact: true,\r\n    page: FormOtrosFamiliares,\r\n  },\r\n  {\r\n    path: \"/formFinal\",\r\n    exact: true,\r\n    page: Pdf,\r\n  },\r\n];\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\TableRowEducacion.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\index.js",[],{"ruleId":"472","severity":1,"message":"473","line":2,"column":35,"nodeType":"474","messageId":"475","endLine":2,"endColumn":40},{"ruleId":"472","severity":1,"message":"476","line":9,"column":3,"nodeType":"474","messageId":"475","endLine":9,"endColumn":9},{"ruleId":"472","severity":1,"message":"477","line":10,"column":3,"nodeType":"474","messageId":"475","endLine":10,"endColumn":9},{"ruleId":"472","severity":1,"message":"478","line":11,"column":3,"nodeType":"474","messageId":"475","endLine":11,"endColumn":21},{"ruleId":"472","severity":1,"message":"479","line":38,"column":10,"nodeType":"474","messageId":"475","endLine":38,"endColumn":25},{"ruleId":"480","replacedBy":"481"},{"ruleId":"482","replacedBy":"483"},{"ruleId":"472","severity":1,"message":"484","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":14},{"ruleId":"472","severity":1,"message":"485","line":14,"column":3,"nodeType":"474","messageId":"475","endLine":14,"endColumn":28},{"ruleId":"472","severity":1,"message":"486","line":21,"column":44,"nodeType":"474","messageId":"475","endLine":21,"endColumn":50},{"ruleId":"487","severity":1,"message":"488","line":85,"column":29,"nodeType":"489","endLine":93,"endColumn":30},{"ruleId":"490","severity":1,"message":"491","line":142,"column":49,"nodeType":"492","messageId":"493","endLine":142,"endColumn":51},{"ruleId":"490","severity":1,"message":"491","line":396,"column":47,"nodeType":"492","messageId":"493","endLine":396,"endColumn":49},{"ruleId":"490","severity":1,"message":"491","line":416,"column":56,"nodeType":"492","messageId":"493","endLine":416,"endColumn":58},{"ruleId":"490","severity":1,"message":"491","line":425,"column":50,"nodeType":"492","messageId":"493","endLine":425,"endColumn":52},{"ruleId":"490","severity":1,"message":"491","line":435,"column":51,"nodeType":"492","messageId":"493","endLine":435,"endColumn":53},{"ruleId":"490","severity":1,"message":"491","line":445,"column":52,"nodeType":"492","messageId":"493","endLine":445,"endColumn":54},{"ruleId":"490","severity":1,"message":"491","line":459,"column":53,"nodeType":"492","messageId":"493","endLine":459,"endColumn":55},{"ruleId":"490","severity":1,"message":"491","line":467,"column":50,"nodeType":"492","messageId":"493","endLine":467,"endColumn":52},{"ruleId":"490","severity":1,"message":"491","line":476,"column":49,"nodeType":"492","messageId":"493","endLine":476,"endColumn":51},{"ruleId":"490","severity":1,"message":"491","line":485,"column":52,"nodeType":"492","messageId":"493","endLine":485,"endColumn":54},{"ruleId":"490","severity":1,"message":"491","line":493,"column":48,"nodeType":"492","messageId":"493","endLine":493,"endColumn":50},{"ruleId":"490","severity":1,"message":"491","line":522,"column":52,"nodeType":"492","messageId":"493","endLine":522,"endColumn":54},{"ruleId":"490","severity":1,"message":"491","line":531,"column":53,"nodeType":"492","messageId":"493","endLine":531,"endColumn":55},{"ruleId":"490","severity":1,"message":"491","line":541,"column":54,"nodeType":"492","messageId":"493","endLine":541,"endColumn":56},{"ruleId":"490","severity":1,"message":"491","line":575,"column":54,"nodeType":"492","messageId":"493","endLine":575,"endColumn":56},{"ruleId":"490","severity":1,"message":"491","line":614,"column":56,"nodeType":"492","messageId":"493","endLine":614,"endColumn":58},{"ruleId":"490","severity":1,"message":"491","line":623,"column":56,"nodeType":"492","messageId":"493","endLine":623,"endColumn":58},{"ruleId":"490","severity":1,"message":"491","line":643,"column":57,"nodeType":"492","messageId":"493","endLine":643,"endColumn":59},{"ruleId":"490","severity":1,"message":"491","line":653,"column":55,"nodeType":"492","messageId":"493","endLine":653,"endColumn":57},{"ruleId":"490","severity":1,"message":"491","line":663,"column":57,"nodeType":"492","messageId":"493","endLine":663,"endColumn":59},{"ruleId":"490","severity":1,"message":"491","line":674,"column":53,"nodeType":"492","messageId":"493","endLine":674,"endColumn":55},{"ruleId":"490","severity":1,"message":"491","line":690,"column":48,"nodeType":"492","messageId":"493","endLine":690,"endColumn":50},{"ruleId":"490","severity":1,"message":"491","line":691,"column":40,"nodeType":"492","messageId":"493","endLine":691,"endColumn":42},{"ruleId":"490","severity":1,"message":"491","line":866,"column":47,"nodeType":"492","messageId":"493","endLine":866,"endColumn":49},{"ruleId":"490","severity":1,"message":"491","line":1044,"column":48,"nodeType":"492","messageId":"493","endLine":1044,"endColumn":50},{"ruleId":"494","severity":1,"message":"495","line":1130,"column":9,"nodeType":"489","endLine":1137,"endColumn":10},{"ruleId":"494","severity":1,"message":"495","line":1140,"column":9,"nodeType":"489","endLine":1146,"endColumn":10},{"ruleId":"494","severity":1,"message":"495","line":1151,"column":13,"nodeType":"489","endLine":1151,"endColumn":59},{"ruleId":"480","replacedBy":"496"},{"ruleId":"482","replacedBy":"497"},{"ruleId":"472","severity":1,"message":"498","line":16,"column":10,"nodeType":"474","messageId":"475","endLine":16,"endColumn":26},{"ruleId":"472","severity":1,"message":"499","line":25,"column":10,"nodeType":"474","messageId":"475","endLine":25,"endColumn":17},{"ruleId":"472","severity":1,"message":"500","line":25,"column":19,"nodeType":"474","messageId":"475","endLine":25,"endColumn":29},{"ruleId":"501","severity":1,"message":"502","line":60,"column":6,"nodeType":"503","endLine":60,"endColumn":8,"suggestions":"504"},{"ruleId":"490","severity":1,"message":"505","line":237,"column":13,"nodeType":"492","messageId":"493","endLine":237,"endColumn":15},{"ruleId":"472","severity":1,"message":"506","line":242,"column":10,"nodeType":"474","messageId":"475","endLine":242,"endColumn":28},{"ruleId":"490","severity":1,"message":"505","line":244,"column":13,"nodeType":"492","messageId":"493","endLine":244,"endColumn":15},{"ruleId":"480","replacedBy":"507"},{"ruleId":"482","replacedBy":"508"},{"ruleId":"472","severity":1,"message":"509","line":2,"column":20,"nodeType":"474","messageId":"475","endLine":2,"endColumn":26},{"ruleId":"472","severity":1,"message":"510","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":14},{"ruleId":"472","severity":1,"message":"511","line":7,"column":8,"nodeType":"474","messageId":"475","endLine":7,"endColumn":14},{"ruleId":"472","severity":1,"message":"512","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":11},{"ruleId":"472","severity":1,"message":"513","line":2,"column":23,"nodeType":"474","messageId":"475","endLine":2,"endColumn":27},{"ruleId":"472","severity":1,"message":"514","line":2,"column":29,"nodeType":"474","messageId":"475","endLine":2,"endColumn":40},{"ruleId":"472","severity":1,"message":"486","line":2,"column":42,"nodeType":"474","messageId":"475","endLine":2,"endColumn":48},{"ruleId":"472","severity":1,"message":"484","line":2,"column":50,"nodeType":"474","messageId":"475","endLine":2,"endColumn":54},{"ruleId":"515","severity":1,"message":"516","line":129,"column":11,"nodeType":"474","messageId":"517","endLine":129,"endColumn":19},{"ruleId":"515","severity":1,"message":"516","line":133,"column":11,"nodeType":"474","messageId":"517","endLine":133,"endColumn":19},{"ruleId":"515","severity":1,"message":"516","line":137,"column":11,"nodeType":"474","messageId":"517","endLine":137,"endColumn":19},{"ruleId":"518","severity":1,"message":"519","line":404,"column":7,"nodeType":"520","messageId":"521","endLine":404,"endColumn":13},{"ruleId":"518","severity":1,"message":"519","line":407,"column":7,"nodeType":"520","messageId":"521","endLine":407,"endColumn":13},{"ruleId":"518","severity":1,"message":"519","line":410,"column":7,"nodeType":"520","messageId":"521","endLine":410,"endColumn":13},{"ruleId":"518","severity":1,"message":"519","line":413,"column":7,"nodeType":"520","messageId":"521","endLine":413,"endColumn":13},{"ruleId":"480","replacedBy":"522"},{"ruleId":"482","replacedBy":"523"},{"ruleId":"480","replacedBy":"524"},{"ruleId":"482","replacedBy":"525"},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"480","replacedBy":"527"},{"ruleId":"482","replacedBy":"528"},{"ruleId":"472","severity":1,"message":"526","line":12,"column":24,"nodeType":"474","messageId":"475","endLine":12,"endColumn":39},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"472","severity":1,"message":"486","line":3,"column":16,"nodeType":"474","messageId":"475","endLine":3,"endColumn":22},{"ruleId":"472","severity":1,"message":"529","line":15,"column":21,"nodeType":"474","messageId":"475","endLine":15,"endColumn":33},{"ruleId":"472","severity":1,"message":"530","line":16,"column":10,"nodeType":"474","messageId":"475","endLine":16,"endColumn":19},{"ruleId":"472","severity":1,"message":"531","line":16,"column":21,"nodeType":"474","messageId":"475","endLine":16,"endColumn":33},{"ruleId":"472","severity":1,"message":"532","line":17,"column":10,"nodeType":"474","messageId":"475","endLine":17,"endColumn":22},{"ruleId":"472","severity":1,"message":"533","line":17,"column":24,"nodeType":"474","messageId":"475","endLine":17,"endColumn":39},{"ruleId":"501","severity":1,"message":"534","line":34,"column":6,"nodeType":"503","endLine":34,"endColumn":8,"suggestions":"535"},{"ruleId":"501","severity":1,"message":"536","line":48,"column":6,"nodeType":"503","endLine":48,"endColumn":8,"suggestions":"537"},{"ruleId":"490","severity":1,"message":"491","line":71,"column":35,"nodeType":"492","messageId":"493","endLine":71,"endColumn":37},{"ruleId":"490","severity":1,"message":"491","line":72,"column":36,"nodeType":"492","messageId":"493","endLine":72,"endColumn":38},{"ruleId":"490","severity":1,"message":"491","line":112,"column":20,"nodeType":"492","messageId":"493","endLine":112,"endColumn":22},{"ruleId":"490","severity":1,"message":"491","line":115,"column":36,"nodeType":"492","messageId":"493","endLine":115,"endColumn":38},{"ruleId":"490","severity":1,"message":"505","line":128,"column":36,"nodeType":"492","messageId":"493","endLine":128,"endColumn":38},{"ruleId":"538","severity":1,"message":"539","line":4,"column":36,"nodeType":"540","messageId":"541","endLine":4,"endColumn":37,"suggestions":"542"},{"ruleId":"538","severity":1,"message":"543","line":4,"column":38,"nodeType":"540","messageId":"541","endLine":4,"endColumn":39,"suggestions":"544"},{"ruleId":"538","severity":1,"message":"545","line":4,"column":43,"nodeType":"540","messageId":"541","endLine":4,"endColumn":44,"suggestions":"546"},{"ruleId":"538","severity":1,"message":"543","line":4,"column":57,"nodeType":"540","messageId":"541","endLine":4,"endColumn":58,"suggestions":"547"},{"ruleId":"538","severity":1,"message":"539","line":10,"column":41,"nodeType":"540","messageId":"541","endLine":10,"endColumn":42,"suggestions":"548"},{"ruleId":"538","severity":1,"message":"549","line":10,"column":43,"nodeType":"540","messageId":"541","endLine":10,"endColumn":44,"suggestions":"550"},{"ruleId":"538","severity":1,"message":"551","line":10,"column":45,"nodeType":"540","messageId":"541","endLine":10,"endColumn":46,"suggestions":"552"},{"ruleId":"472","severity":1,"message":"553","line":6,"column":10,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"554","line":6,"column":18,"nodeType":"474","messageId":"475","endLine":6,"endColumn":22},{"ruleId":"472","severity":1,"message":"479","line":23,"column":10,"nodeType":"474","messageId":"475","endLine":23,"endColumn":25},{"ruleId":"490","severity":1,"message":"505","line":276,"column":22,"nodeType":"492","messageId":"493","endLine":276,"endColumn":24},{"ruleId":"490","severity":1,"message":"505","line":277,"column":22,"nodeType":"492","messageId":"493","endLine":277,"endColumn":24},{"ruleId":"490","severity":1,"message":"505","line":278,"column":22,"nodeType":"492","messageId":"493","endLine":278,"endColumn":24},{"ruleId":"490","severity":1,"message":"505","line":279,"column":22,"nodeType":"492","messageId":"493","endLine":279,"endColumn":24},{"ruleId":"490","severity":1,"message":"505","line":280,"column":22,"nodeType":"492","messageId":"493","endLine":280,"endColumn":24},{"ruleId":"472","severity":1,"message":"555","line":14,"column":10,"nodeType":"474","messageId":"475","endLine":14,"endColumn":22},{"ruleId":"472","severity":1,"message":"479","line":16,"column":10,"nodeType":"474","messageId":"475","endLine":16,"endColumn":25},{"ruleId":"501","severity":1,"message":"556","line":30,"column":6,"nodeType":"503","endLine":30,"endColumn":8,"suggestions":"557"},{"ruleId":"472","severity":1,"message":"526","line":10,"column":24,"nodeType":"474","messageId":"475","endLine":10,"endColumn":39},{"ruleId":"472","severity":1,"message":"558","line":40,"column":3,"nodeType":"474","messageId":"475","endLine":40,"endColumn":10},{"ruleId":"472","severity":1,"message":"559","line":63,"column":10,"nodeType":"474","messageId":"475","endLine":63,"endColumn":20},{"ruleId":"490","severity":1,"message":"505","line":383,"column":37,"nodeType":"492","messageId":"493","endLine":383,"endColumn":39},{"ruleId":"490","severity":1,"message":"491","line":446,"column":40,"nodeType":"492","messageId":"493","endLine":446,"endColumn":42},{"ruleId":"490","severity":1,"message":"491","line":524,"column":36,"nodeType":"492","messageId":"493","endLine":524,"endColumn":38},{"ruleId":"490","severity":1,"message":"491","line":690,"column":38,"nodeType":"492","messageId":"493","endLine":690,"endColumn":40},{"ruleId":"490","severity":1,"message":"491","line":876,"column":27,"nodeType":"492","messageId":"493","endLine":876,"endColumn":29},{"ruleId":"490","severity":1,"message":"491","line":876,"column":59,"nodeType":"492","messageId":"493","endLine":876,"endColumn":61},{"ruleId":"490","severity":1,"message":"491","line":1014,"column":36,"nodeType":"492","messageId":"493","endLine":1014,"endColumn":38},{"ruleId":"490","severity":1,"message":"491","line":1024,"column":36,"nodeType":"492","messageId":"493","endLine":1024,"endColumn":38},{"ruleId":"490","severity":1,"message":"505","line":1039,"column":24,"nodeType":"492","messageId":"493","endLine":1039,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":1042,"column":5,"nodeType":"562","messageId":"563","endLine":1046,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":1043,"column":11,"nodeType":"474","messageId":"517","endLine":1043,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":1044,"column":24,"nodeType":"492","messageId":"493","endLine":1044,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":1048,"column":5,"nodeType":"562","messageId":"563","endLine":1052,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":1049,"column":11,"nodeType":"474","messageId":"517","endLine":1049,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":1050,"column":24,"nodeType":"492","messageId":"493","endLine":1050,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":1054,"column":5,"nodeType":"562","messageId":"563","endLine":1058,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":1055,"column":11,"nodeType":"474","messageId":"517","endLine":1055,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":1056,"column":24,"nodeType":"492","messageId":"493","endLine":1056,"endColumn":26},{"ruleId":"560","severity":1,"message":"565","line":1059,"column":5,"nodeType":"562","messageId":"566","endLine":1060,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":1067,"column":20,"nodeType":"492","messageId":"493","endLine":1067,"endColumn":22},{"ruleId":"490","severity":1,"message":"505","line":1207,"column":27,"nodeType":"492","messageId":"493","endLine":1207,"endColumn":29},{"ruleId":"515","severity":1,"message":"567","line":1212,"column":12,"nodeType":"474","messageId":"517","endLine":1212,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":1213,"column":25,"nodeType":"492","messageId":"493","endLine":1213,"endColumn":27},{"ruleId":"472","severity":1,"message":"526","line":10,"column":24,"nodeType":"474","messageId":"475","endLine":10,"endColumn":39},{"ruleId":"472","severity":1,"message":"568","line":9,"column":3,"nodeType":"474","messageId":"475","endLine":9,"endColumn":12},{"ruleId":"472","severity":1,"message":"569","line":10,"column":3,"nodeType":"474","messageId":"475","endLine":10,"endColumn":8},{"ruleId":"472","severity":1,"message":"570","line":11,"column":3,"nodeType":"474","messageId":"475","endLine":11,"endColumn":12},{"ruleId":"472","severity":1,"message":"553","line":13,"column":10,"nodeType":"474","messageId":"475","endLine":13,"endColumn":16},{"ruleId":"472","severity":1,"message":"554","line":13,"column":18,"nodeType":"474","messageId":"475","endLine":13,"endColumn":22},{"ruleId":"472","severity":1,"message":"555","line":33,"column":10,"nodeType":"474","messageId":"475","endLine":33,"endColumn":22},{"ruleId":"501","severity":1,"message":"571","line":49,"column":6,"nodeType":"503","endLine":49,"endColumn":8,"suggestions":"572"},{"ruleId":"490","severity":1,"message":"491","line":583,"column":20,"nodeType":"492","messageId":"493","endLine":583,"endColumn":22},{"ruleId":"490","severity":1,"message":"505","line":646,"column":24,"nodeType":"492","messageId":"493","endLine":646,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":649,"column":5,"nodeType":"562","messageId":"563","endLine":653,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":650,"column":11,"nodeType":"474","messageId":"517","endLine":650,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":651,"column":24,"nodeType":"492","messageId":"493","endLine":651,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":655,"column":5,"nodeType":"562","messageId":"563","endLine":659,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":656,"column":11,"nodeType":"474","messageId":"517","endLine":656,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":657,"column":24,"nodeType":"492","messageId":"493","endLine":657,"endColumn":26},{"ruleId":"560","severity":1,"message":"561","line":661,"column":5,"nodeType":"562","messageId":"563","endLine":665,"endColumn":8},{"ruleId":"515","severity":1,"message":"564","line":662,"column":11,"nodeType":"474","messageId":"517","endLine":662,"endColumn":23},{"ruleId":"490","severity":1,"message":"505","line":663,"column":24,"nodeType":"492","messageId":"493","endLine":663,"endColumn":26},{"ruleId":"560","severity":1,"message":"565","line":666,"column":5,"nodeType":"562","messageId":"566","endLine":667,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":672,"column":12,"nodeType":"492","messageId":"493","endLine":672,"endColumn":14},{"ruleId":"472","severity":1,"message":"526","line":10,"column":24,"nodeType":"474","messageId":"475","endLine":10,"endColumn":39},{"ruleId":"480","replacedBy":"573"},{"ruleId":"482","replacedBy":"574"},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"472","severity":1,"message":"575","line":1,"column":27,"nodeType":"474","messageId":"475","endLine":1,"endColumn":36},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"472","severity":1,"message":"526","line":10,"column":24,"nodeType":"474","messageId":"475","endLine":10,"endColumn":39},{"ruleId":"472","severity":1,"message":"526","line":11,"column":24,"nodeType":"474","messageId":"475","endLine":11,"endColumn":39},{"ruleId":"480","replacedBy":"576"},{"ruleId":"482","replacedBy":"577"},{"ruleId":"472","severity":1,"message":"578","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":25},{"ruleId":"472","severity":1,"message":"578","line":2,"column":17,"nodeType":"474","messageId":"475","endLine":2,"endColumn":25},{"ruleId":"472","severity":1,"message":"575","line":2,"column":27,"nodeType":"474","messageId":"475","endLine":2,"endColumn":36},{"ruleId":"472","severity":1,"message":"570","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":19},{"ruleId":"472","severity":1,"message":"579","line":4,"column":3,"nodeType":"474","messageId":"475","endLine":4,"endColumn":20},{"ruleId":"472","severity":1,"message":"580","line":5,"column":3,"nodeType":"474","messageId":"475","endLine":5,"endColumn":20},{"ruleId":"472","severity":1,"message":"581","line":6,"column":3,"nodeType":"474","messageId":"475","endLine":6,"endColumn":20},{"ruleId":"472","severity":1,"message":"582","line":7,"column":3,"nodeType":"474","messageId":"475","endLine":7,"endColumn":21},{"ruleId":"472","severity":1,"message":"583","line":14,"column":10,"nodeType":"474","messageId":"475","endLine":14,"endColumn":30},{"ruleId":"472","severity":1,"message":"479","line":17,"column":10,"nodeType":"474","messageId":"475","endLine":17,"endColumn":25},{"ruleId":"584","severity":1,"message":"585","line":17,"column":1,"nodeType":"586","endLine":96,"endColumn":3},"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'faPlus' is defined but never used.","'faSave' is defined but never used.","'faCloudDownloadAlt' is defined but never used.","'guardadoLoading' is assigned a value but never used.","no-native-reassign",["587"],"no-negated-in-lhs",["588"],"'Link' is defined but never used.","'getOtrosFamiliaresPersona' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["587"],["588"],"'getEstudiosLocal' is defined but never used.","'refresh' is assigned a value but never used.","'setrefresh' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formData' and 'idPostulante'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["589"],"Expected '!==' and instead saw '!='.","'llenarDelStorageId' is defined but never used.",["587"],["588"],"'render' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Pdf' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","no-redeclare","'guardado' is already defined.","redeclared","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["587"],["588"],["587"],["588"],"'settipoPerstate' is assigned a value but never used.",["587"],["588"],"'setidpersona' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'contentModal' is assigned a value but never used.","'setContentModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tipoPerstate'. Either include it or remove the dependency array.",["590"],"React Hook useEffect has missing dependencies: 'idPersona' and 'tipoPerstate'. Either include them or remove the dependency array.",["591"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["592","593"],"Unnecessary escape character: \\-.",["594","595"],"Unnecessary escape character: \\@.",["596","597"],["598","599"],["600","601"],"Unnecessary escape character: \\(.",["602","603"],"Unnecessary escape character: \\).",["604","605"],"'values' is defined but never used.","'size' is defined but never used.","'idPostulante' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["606"],"'getSuId' is defined but never used.","'estadoCivi' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'datosStorage' is already defined.","Expected a 'break' statement before 'default'.","default","'i' is already defined.","'FormGroup' is defined but never used.","'Check' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'formData' and 'tipoPerstate'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["607"],["587"],["588"],"'useEffect' is defined but never used.",["587"],["588"],"'useState' is defined but never used.","'setPreguntasPostu' is defined but never used.","'setPreguntasMadre' is defined but never used.","'setPreguntasPadre' is defined but never used.","'setPreguntasPareja' is defined but never used.","'getRespuestasPersona' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"messageId":"614","fix":"615","desc":"616"},{"messageId":"617","fix":"618","desc":"619"},{"messageId":"614","fix":"620","desc":"616"},{"messageId":"617","fix":"621","desc":"619"},{"messageId":"614","fix":"622","desc":"616"},{"messageId":"617","fix":"623","desc":"619"},{"messageId":"614","fix":"624","desc":"616"},{"messageId":"617","fix":"625","desc":"619"},{"messageId":"614","fix":"626","desc":"616"},{"messageId":"617","fix":"627","desc":"619"},{"messageId":"614","fix":"628","desc":"616"},{"messageId":"617","fix":"629","desc":"619"},{"messageId":"614","fix":"630","desc":"616"},{"messageId":"617","fix":"631","desc":"619"},{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},"Update the dependencies array to be: [formData, idPostulante]",{"range":"636","text":"637"},"Update the dependencies array to be: [tipoPerstate]",{"range":"638","text":"639"},"Update the dependencies array to be: [idPersona, tipoPerstate]",{"range":"640","text":"641"},"removeEscape",{"range":"642","text":"643"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"644","text":"645"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"646","text":"643"},{"range":"647","text":"645"},{"range":"648","text":"643"},{"range":"649","text":"645"},{"range":"650","text":"643"},{"range":"651","text":"645"},{"range":"652","text":"643"},{"range":"653","text":"645"},{"range":"654","text":"643"},{"range":"655","text":"645"},{"range":"656","text":"643"},{"range":"657","text":"645"},"Update the dependencies array to be: [formData]",{"range":"658","text":"659"},"Update the dependencies array to be: [formData, tipoPerstate]",{"range":"660","text":"661"},[2324,2326],"[formData, idPostulante]",[1216,1218],"[tipoPerstate]",[1573,1575],"[idPersona, tipoPerstate]",[122,123],"",[122,122],"\\",[124,125],[124,124],[129,130],[129,129],[143,144],[143,143],[325,326],[325,325],[327,328],[327,327],[329,330],[329,329],[1316,1318],"[formData]",[1455,1457],"[formData, tipoPerstate]"]