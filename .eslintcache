[{"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\OtrosFamiliares.js":"1","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Pdf\\Pdf.js":"2","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\TableRowFamiliares.js":"3","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\Educacion.js":"4","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\FormPostulanteEducacion.js":"5","C:\\xampp\\htdocs\\frontendFormulario\\src\\index.js":"6","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Footer.js":"7","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Header.js":"8","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\Routing.js":"9","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\Index.js":"10","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\tablas.js":"11","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\auth.js":"12","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\index.js":"13","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\index.js":"14","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\index.js":"15","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\index.js":"16","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\FormOtrosFamiliares.js":"17","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\FormParejaPreguntas.js":"18","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\FormPareja.js":"19","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\FormPadreLaboral.js":"20","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\FormMadrePreguntas.js":"21","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\index.js":"22","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\Preguntas.js":"23","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\index.js":"24","C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\validations.js":"25","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\AgregarOtrosFamiliares.js":"26","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\OtrosEstudios.js":"27","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\FormPostulante.js":"28","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\DatosPersonales.js":"29","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\FormPostulanteLaboral.js":"30","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\Laboral.js":"31","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\FormPostulantePreguntas.js":"32","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\FormMadre.js":"33","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\FormMadreLaboral.js":"34","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\FormPadre.js":"35","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\FormPadrePreguntas.js":"36","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\FormParejaLaboral.js":"37","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\TableRowPregPDF.js":"38","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\index.js":"39","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\index.js":"40","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\index.js":"41","C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\constant.js":"42","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\index.js":"43","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\index.js":"44","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\index.js":"45","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\index.js":"46","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\index.js":"47","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\combos.js":"48","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\BasicModal.js":"49","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\InicioForm.js":"50","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\index.js":"51","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\index.js":"52","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\index.js":"53","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\TableRow.js":"54","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\configRouting.js":"55","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\index.js":"56","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\index.js":"57","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\index.js":"58","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\index.js":"59","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\TableRowEducacion.js":"60","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\index.js":"61","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\index.js":"62","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\index.js":"63"},{"size":3544,"mtime":1614864067176,"results":"64","hashOfConfig":"65"},{"size":43072,"mtime":1618244804086,"results":"66","hashOfConfig":"65"},{"size":979,"mtime":1614817468124,"results":"67","hashOfConfig":"65"},{"size":22266,"mtime":1614863169687,"results":"68","hashOfConfig":"65"},{"size":921,"mtime":1614863159534,"results":"69","hashOfConfig":"65"},{"size":758,"mtime":1614476045805,"results":"70","hashOfConfig":"65"},{"size":172,"mtime":1610723537047,"results":"71","hashOfConfig":"65"},{"size":364,"mtime":1613959537365,"results":"72","hashOfConfig":"65"},{"size":488,"mtime":1613960972349,"results":"73","hashOfConfig":"65"},{"size":44,"mtime":1610368043906,"results":"74","hashOfConfig":"65"},{"size":5862,"mtime":1614768346364,"results":"75","hashOfConfig":"65"},{"size":12527,"mtime":1614763861872,"results":"76","hashOfConfig":"65"},{"size":52,"mtime":1614180707964,"results":"77","hashOfConfig":"65"},{"size":50,"mtime":1614346415938,"results":"78","hashOfConfig":"65"},{"size":49,"mtime":1614343648822,"results":"79","hashOfConfig":"65"},{"size":49,"mtime":1614272216865,"results":"80","hashOfConfig":"65"},{"size":762,"mtime":1614864033338,"results":"81","hashOfConfig":"65"},{"size":1018,"mtime":1614863802199,"results":"82","hashOfConfig":"65"},{"size":1192,"mtime":1614863762683,"results":"83","hashOfConfig":"65"},{"size":1144,"mtime":1614863671762,"results":"84","hashOfConfig":"65"},{"size":981,"mtime":1614863520386,"results":"85","hashOfConfig":"65"},{"size":49,"mtime":1610712224302,"results":"86","hashOfConfig":"65"},{"size":5107,"mtime":1614766707573,"results":"87","hashOfConfig":"65"},{"size":41,"mtime":1610326572539,"results":"88","hashOfConfig":"65"},{"size":398,"mtime":1618416460125,"results":"89","hashOfConfig":"65"},{"size":9040,"mtime":1618502694860,"results":"90","hashOfConfig":"65"},{"size":3767,"mtime":1614698233285,"results":"91","hashOfConfig":"65"},{"size":1093,"mtime":1614863008721,"results":"92","hashOfConfig":"65"},{"size":38675,"mtime":1618425231532,"results":"93","hashOfConfig":"65"},{"size":1158,"mtime":1614863225063,"results":"94","hashOfConfig":"65"},{"size":13032,"mtime":1614863248825,"results":"95","hashOfConfig":"65"},{"size":994,"mtime":1614863328631,"results":"96","hashOfConfig":"65"},{"size":1171,"mtime":1614863425760,"results":"97","hashOfConfig":"65"},{"size":1148,"mtime":1614863484831,"results":"98","hashOfConfig":"65"},{"size":1174,"mtime":1614863632508,"results":"99","hashOfConfig":"65"},{"size":989,"mtime":1614863702832,"results":"100","hashOfConfig":"65"},{"size":1174,"mtime":1614863832924,"results":"101","hashOfConfig":"65"},{"size":446,"mtime":1615321876847,"results":"102","hashOfConfig":"65"},{"size":46,"mtime":1614515484042,"results":"103","hashOfConfig":"65"},{"size":48,"mtime":1613743138853,"results":"104","hashOfConfig":"65"},{"size":49,"mtime":1613751483882,"results":"105","hashOfConfig":"65"},{"size":2330,"mtime":1615323549959,"results":"106","hashOfConfig":"65"},{"size":54,"mtime":1614179836307,"results":"107","hashOfConfig":"65"},{"size":47,"mtime":1614271876699,"results":"108","hashOfConfig":"65"},{"size":40,"mtime":1610376999948,"results":"109","hashOfConfig":"65"},{"size":46,"mtime":1610397084828,"results":"110","hashOfConfig":"65"},{"size":40,"mtime":1610397150959,"results":"111","hashOfConfig":"65"},{"size":6293,"mtime":1615323976928,"results":"112","hashOfConfig":"65"},{"size":414,"mtime":1614695089946,"results":"113","hashOfConfig":"65"},{"size":500,"mtime":1614265396323,"results":"114","hashOfConfig":"65"},{"size":50,"mtime":1614346624958,"results":"115","hashOfConfig":"65"},{"size":40,"mtime":1610377787421,"results":"116","hashOfConfig":"65"},{"size":40,"mtime":1610397237220,"results":"117","hashOfConfig":"65"},{"size":4681,"mtime":1614766189759,"results":"118","hashOfConfig":"65"},{"size":2444,"mtime":1614468149962,"results":"119","hashOfConfig":"65"},{"size":41,"mtime":1610377888617,"results":"120","hashOfConfig":"65"},{"size":38,"mtime":1610397186881,"results":"121","hashOfConfig":"65"},{"size":48,"mtime":1614345995506,"results":"122","hashOfConfig":"65"},{"size":39,"mtime":1613498802096,"results":"123","hashOfConfig":"65"},{"size":346,"mtime":1613751607815,"results":"124","hashOfConfig":"65"},{"size":47,"mtime":1614343355990,"results":"125","hashOfConfig":"65"},{"size":53,"mtime":1610712559601,"results":"126","hashOfConfig":"65"},{"size":45,"mtime":1610399996177,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},"ga6b1n",{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"135"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"135"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"135"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"144"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"135"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"144"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"135"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"135"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"131"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"168"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"194"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"194"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"144"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"131"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"144"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"135"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"135"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\OtrosFamiliares.js",["287","288","289","290","291","292"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Jumbotron, Table, Container } from \"react-bootstrap\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { map } from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faUsers,\r\n  faPlus,\r\n  faSave,\r\n  faCloudDownloadAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport BasicModal from \"../../../Modal/BasicModal/index\";\r\nimport AgregarOtrosFamiliares from \"../AgregarOtrosFamiliares/index\";\r\nimport { getIdPostu } from \"../../../../api/auth\";\r\nimport {\r\n  getOtrosFamiliaresPersona,\r\n  listaOtrosFamiliaresPersona,\r\n} from \"../../../../api/tablas\";\r\nimport TableRowFamiliares from \"../TableRowFamiliares\";\r\n\r\nimport \"../../FormPostulante/FormPostulante\";\r\n\r\nexport default function FormOtrosFamiliares() {\r\n  //Para manejar el Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentModal, setContentModal] = useState(null);\r\n  //estate que uso para mandar al modal de agregar otros fliares e incrementar cuando se cierra el mismo para hacer que el useEfect que carga los familiares se ejecute al cambiar contador\r\n  const [contador, setcontador] = useState(1);\r\n  const [fliares, setfliares] = useState([]);\r\n  //funcion que abre el modal y le agrega el contenido de los form\r\n  const openModal = (content) => {\r\n    setShowModal(true);\r\n    setContentModal(content);\r\n  };\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  useEffect(() => {\r\n    getOtrosFamiliaresPersona(getIdPostu())\r\n      .then((response) => {\r\n        let listaFliares = formatModel(response.data);\r\n        setfliares(listaFliares);\r\n      })\r\n      .catch(() => {});\r\n  }, [contador]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setGuardadoLoading(true);\r\n    listaOtrosFamiliaresPersona(getIdPostu());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <BasicModal show={showModal} setShow={setShowModal}>\r\n          {contentModal}\r\n        </BasicModal>\r\n\r\n        <Form onSubmit={onSubmit}>\r\n          <Jumbotron>\r\n            <div>\r\n              <h3>Otros integrantes del nucleo Habitacional</h3>\r\n              <Button\r\n                variant=\"agregar\"\r\n                onClick={() =>\r\n                  openModal(\r\n                    <AgregarOtrosFamiliares\r\n                      setShowModal={setShowModal}\r\n                      contador={contador}\r\n                      setcontador={setcontador}\r\n                    />\r\n                  )\r\n                }\r\n              >\r\n                <span>\r\n                  Añadir\r\n                  <FontAwesomeIcon icon={faUsers} />\r\n                </span>\r\n              </Button>\r\n\r\n              {fliares.length == 0 ? (\r\n                <tr>No hay Familiares ingresados</tr>\r\n              ) : (\r\n                map(fliares, (fliar, index) => (\r\n                  <TableRowFamiliares pariente={fliar} key={index} />\r\n                ))\r\n              )}\r\n            </div>\r\n          </Jumbotron>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\nfunction formatModel(fliares) {\r\n  //lista temporal\r\n  const fliaresTemp = [];\r\n\r\n  fliares.forEach((fliar) => {\r\n    fliaresTemp.push({\r\n      //creo el formato\r\n      id: fliar.familiar_id,\r\n      primerNombre: fliar.primerNombre,\r\n      primerApellido: fliar.primerApellido,\r\n      fechaNacimiento: fliar.fechaNacimiento,\r\n      parentesco: fliar.nombre,\r\n    });\r\n  });\r\n  return fliaresTemp;\r\n}\r\n",["293","294"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Pdf\\Pdf.js",["295","296","297","298","299","300","301","302","303","304"],"import React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nimport { map } from \"lodash\";\r\nimport TableRowEducacion from \"../Forms/Componentes/TableRowEducacion/index\";\r\nimport TableRowPregPDF from \"../Forms/Componentes/TableRowPregPDF/index\";\r\nimport TableRowFamiliares from \"../Forms/Componentes/TableRowFamiliares/index\";\r\nimport {\r\n  listaOtrosEstudios,\r\n  getEstudiosLocal,\r\n  listarRespuestas,\r\n  getRespuestasLocal,\r\n  getOtrosFamiliaresPersona,\r\n  getfliaresLocal,\r\n  listaOtrosFamiliaresPersona,\r\n} from \"../../api/tablas\";\r\nimport \"../../scss/index.scss\";\r\nimport \"../../scss/pdf.scss\";\r\n\r\nimport { Row, Col, Form, Container, Table } from \"react-bootstrap\";\r\nimport {\r\n  getDataPostu,\r\n  getDataMadre,\r\n  getDataPadre,\r\n  getDataPareja,\r\n  getIdPostu,\r\n  getIdMadre,\r\n  getIdPadre,\r\n  getIdPareja,\r\n  getEstudiosBasicos,\r\n  getLabPostu,\r\n  getLabMadre,\r\n  getLabPadre,\r\n  getLabPareja,\r\n} from \"../../api/auth\";\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //STATES QUE USO PARA RELLENAR EL PDF\r\n    this.dataPostu = getDataPostu();\r\n    this.dataMadre = getDataMadre();\r\n    this.dataPadre = getDataPadre();\r\n    this.dataPareja = getDataPareja();\r\n    this.idPostu = getIdPostu();\r\n    this.idMadre = getIdMadre();\r\n    this.idPadre = getIdPadre();\r\n    this.idPareja = getIdPareja();\r\n    this.listaEstudios = listaOtrosEstudios(getIdPostu());\r\n    this.estudios = getEstudiosLocal();\r\n    this.estudiosBasicos = getEstudiosBasicos();\r\n    this.laboralPostu = getLabPostu();\r\n    this.laboralMadre = getLabMadre();\r\n    this.laboralPadre = getLabPadre();\r\n    this.laboralPareja = getLabPareja();\r\n    this.listaPreguntasPostu = listarRespuestas(getIdPostu(), 1);\r\n    this.preguntasPostu = getRespuestasLocal(1);\r\n    this.listaPreguntasMadre = listarRespuestas(getIdMadre(), 2);\r\n    this.preguntasMadre = getRespuestasLocal(2);\r\n    this.listaPreguntasPadre = listarRespuestas(getIdPadre(), 3);\r\n    this.preguntasPadre = getRespuestasLocal(3);\r\n    this.listaPreguntasPareja = listarRespuestas(getIdPareja(), 10);\r\n    this.preguntasPareja = getRespuestasLocal(10);\r\n    this.listaParientes = listaOtrosFamiliaresPersona(getIdPostu());\r\n    this.parientes = getfliaresLocal();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div class=\"container\">\r\n            <td style={{ width: \"88%\" }} align={\"left\"}>\r\n              <div>\r\n                <table class=\"table\">\r\n                  <tr>\r\n                    <td>\r\n                      <h5>SOLICITUD DE INGRESOS</h5>\r\n                    </td>\r\n                    <td>\r\n                      <table>\r\n                        <tr>\r\n                          <td>\r\n                              <img src=\"logoArmada.jpg\" style={{ width: \"100px\", height: \"100px\", marginLeft:\"40%\", marginRight:\"50%\"}} ></img>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                              <h5>COMANDO GENERAL DE LA ARMADA</h5>\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                              <h2 style={{ textAlign: \"center\" }}>Reservado</h2>\r\n                          </td>\r\n                        </tr>\r\n                      </table>\r\n                    </td>\r\n                    <td>\r\n                      <h5>FORMULARIO 04</h5>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </td>\r\n            <tr align={\"right\"} style={{ width: \"25%\", textAlign: \"left\" }}>\r\n              <div>\r\n                <table class=\"table\" >\r\n                  <tr>\r\n                    <td>\r\n                      <h5>UNIDAD ORIGINADORA: ________________</h5>\r\n                    </td>\r\n                    <td>\r\n                      <h5>FECHA: ___/___/____</h5>\r\n                    </td>\r\n                    <td>\r\n                      <h5>SOL. NRO: ________________</h5>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </tr>\r\n          </div>\r\n        </div>\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion del Postulante</h2>\r\n\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales:</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col style={{  display: (this.dataPostu.primerNombre=='')?' block;':' none;' }}>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPostu.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPostu.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPostu.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPostu.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPostu.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPostu.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPostu.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPostu.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPostu.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_postu\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPostu.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPostu.credencialNumero} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPostu.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio:</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPostu.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPostu\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPostu.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPostu.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n           {/*LABORAL POSTULANTE*/}\r\n           <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.cargo_funcion} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPostu.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.nombreEmpresa} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPostu.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n          {/*estudios dela persona */}\r\n          <Container>\r\n            <Form>\r\n              <div>\r\n                <h3 style={{ textAlign: \"left\", pageBreakBefore:\"always\" }}>Educacion</h3>\r\n\r\n                <Table>\r\n                  <th>\r\n                    <h4>Primaria</h4>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Año</th>\r\n                        <th>Nombre de institucion</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Primer Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos\r\n                                .primeroPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Segundo Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos\r\n                                .segundoPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Tercer Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos\r\n                                .terceroPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Cuarto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos\r\n                                .cuartoPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Quinto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos\r\n                                .quintoPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Sexto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.sextoPrimaria_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </th>\r\n                  <th>\r\n                    <h4>Secundaria y Bachillerato</h4>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Año</th>\r\n                        <th>Nombre de institucion</th>\r\n                        <th hidden>tipo_estudio</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Primer Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.primeroSecu_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Segundo Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.segundoSecu_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Tercer Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.terceroSecu_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Cuarto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.cuartoBach_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Quinto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.quintoBach_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            defaultValue=\"Sexto Año\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          {\" \"}\r\n                          <Form.Control\r\n                            value={\r\n                              this.estudiosBasicos.sextoBach_nombreInstituto\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </th>\r\n                </Table>\r\n\r\n                <h3 style={{ textAlign: \"left\" }}>\r\n                  Otros Estudios Realizados\r\n                </h3>\r\n\r\n                <Table id=\"tabla\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Años Cursados</th>\r\n                      <th>Nombre del Estudio/Capacitacion</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {this.estudios == null ? (\r\n                      <tr>No hay Estudios ingresados</tr>\r\n                    ) : (\r\n                      map(this.estudios, (est, index) => (\r\n                        <TableRowEducacion estudio={est} key={index} />\r\n                      ))\r\n                    )}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n         \r\n\r\n          {/*PREGUNTAS POSTULANTE*/}\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {/**En esta parte hago un if que controla si el array de preguntas no tiene nada cargado aun\r\n                   * muestra el mensaje que no hay preguntas, sino hace un map con la lista de preguntas y llama al\r\n                   * tableRow que yo hice mandandole los parametros del map.\r\n                   */}\r\n                  {this.preguntasPostu.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPostu, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n        {/**DATOS DE LA MADRE */}\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion de la Madre</h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataMadre.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataMadre.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataMadre.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataMadre.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataMadre.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataMadre.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataMadre.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataMadre.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataMadre.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n            <Col style={{  display: ((localStorage.getItem(\"estCivil_madre\")!=null) ?'block':'none') }}>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_madre\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataMadre.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataMadre.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataMadre.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataMadre.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioMadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataMadre.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataMadre.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL Madre*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control value={this.laboralMadre.cargo_funcion} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralMadre.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralMadre.nombreEmpresa} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralMadre.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {(this.preguntasMadre.length == 0) |\r\n                  (this.preguntasMadre == undefined) ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasMadre, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n        {/**DATOS DEL PADRE */}\r\n        <h2 style={{ textAlign: \"center\" }}>Informacion del Padre</h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPadre.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPadre.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPadre.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPadre.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPadre.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPadre.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPadre.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPadre.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPadre.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_padre\")}\r\n                ></Form.Control>\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPadre.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPadre.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPadre.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPadre.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPadre\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPadre.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPadre.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL PADRE*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.cargo_funcion} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPadre.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.nombreEmpresa} />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPadre.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\", pageBreakBefore:\"always\"}}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {this.preguntasPadre.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPadre, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n        {/**DATOS DE PAREJA */}\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Informacion de Conyuge, Concubino/a , Novio/a\r\n        </h2>\r\n        <Container>\r\n          <h3 style={{ textAlign: \"left\" }}>Datos Personales</h3>\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Primer Nombre</Form.Label>\r\n                <Form.Control value={this.dataPareja.primerNombre} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Nombre</Form.Label>\r\n                <Form.Control value={this.dataPareja.segundoNombre} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Primer Apellido</Form.Label>\r\n                <Form.Control value={this.dataPareja.primerApellido} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Segundo Apellido</Form.Label>\r\n                <Form.Control value={this.dataPareja.segundoApellido} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Telefono/Celular</Form.Label>\r\n                <Form.Control value={this.dataPareja.telefono_celular} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Cedula de identidad</Form.Label>\r\n                <Form.Control value={this.dataPareja.cedula} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Apodo</Form.Label>\r\n                <Form.Control value={this.dataPareja.apodo} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Fecha de Nacimiento</Form.Label>\r\n                <Form.Control value={this.dataPareja.fechaNacimiento} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Sexo</Form.Label>\r\n                <Form.Control value={this.dataPareja.sexo}></Form.Control>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>Estado Civil</Form.Label>\r\n\r\n                <Form.Control\r\n                  value={localStorage.getItem(\"estCivil_pareja\")}\r\n                ></Form.Control>\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Serie</Form.Label>\r\n                <Form.Control value={this.dataPareja.credencialSerie} />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>Credencial Civica Numero</Form.Label>\r\n                <Form.Control value={this.dataPareja.credencialNumero} />\r\n              </Col>\r\n\r\n              <Col>\r\n                <Form.Label>Correo Electronico</Form.Label>\r\n                <Form.Control value={this.dataPareja.correoElectronico} />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        {/*SECCION DE DOMICILIO DE LA PERSONA*/}\r\n\r\n        <div>\r\n          <Container>\r\n            <h3 style={{ textAlign: \"left\" }}>Domicilio</h3>\r\n\r\n            <Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Pais de Nacimiento</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"paisPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilio Actual</Form.Label>\r\n                  <Form.Control value={this.dataPareja.domicilioActual} />\r\n                </Col>\r\n\r\n                <Col>\r\n                  <Form.Label>Departamento de Domicilio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"depaPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Ciudad/Barrio</Form.Label>\r\n                  <Form.Control\r\n                    value={localStorage.getItem(\"barrioPareja\")}\r\n                  ></Form.Control>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label>Seccional Policial</Form.Label>\r\n                  <Form.Control value={this.dataPareja.seccionalPolicial} />\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label>Domicilios Anteriores</Form.Label>\r\n                  <Form.Control value={this.dataPareja.domicilioAnterior} />\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n          </Container>\r\n          {/*LABORAL PADRE*/}\r\n          <Container>\r\n            <Form>\r\n              <div className=\"form-datos-personales\">\r\n                <h3 style={{ textAlign: \"left\" }}>Ocupacion Actual</h3>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label>Cargo o Funcion</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.cargo_funcion}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Ente</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.ente}\r\n                        ></Form.Control>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <Form.Label>Nombre de la Empresa</Form.Label>\r\n                        <Form.Control\r\n                          value={this.laboralPareja.nombreEmpresa}\r\n                        />\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Label>Direccion de la Empresa</Form.Label>\r\n                        <Form.Control value={this.laboralPareja.direccion} />\r\n                      </Col>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\" }}>Respuestas Ingresadas:</h3>\r\n              <Table>\r\n                <tbody>\r\n                  {this.preguntasPareja.length == 0 ? (\r\n                    <tr>No hay respuestas</tr>\r\n                  ) : (\r\n                    map(this.preguntasPareja, (preg, index) => (\r\n                      <TableRowPregPDF pregunta={preg} key={index} />\r\n                    ))\r\n                  )}\r\n                </tbody>\r\n              </Table>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n\r\n        <div>\r\n          <Container>\r\n            <Form>\r\n              <h3 style={{ textAlign: \"left\", pageBreakBefore:\"always\" }}>\r\n                Otros integrantes del ambito habitacional:\r\n              </h3>\r\n              <div>\r\n                {this.parientes.length == 0 ? (\r\n                  <tr>No hay Familiares ingresados</tr>\r\n                ) : (\r\n                  map(this.parientes, (fliar, index) => (\r\n                    <TableRowFamiliares pariente={fliar} key={index} />\r\n                  ))\r\n                )}\r\n              </div>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n        <div >\r\n          <Container>\r\n            <p>\r\n              CERTIFICO, que las declaraciones que ha brindado revisten al\r\n              carácter de DECLARACIÓN JURADA, y que las mismas son verdaderas,\r\n              completas y correctas, según mi mejor saber y entender, y que las\r\n              he hecho de buena fé, y si se comprobara por parte de la Autoridad\r\n              Naval , falsedad y omisión intencional, podré ser automáticamente\r\n              eliminado como Posstulante a ingreso a la Armada Nacional,\r\n              aceptando la aplicación del ARTÍCULO 239 DEL CODIGO PENAL,\r\n              FALSIFICACIÓN IDEOLÓGICA POR UN PARTICULAR;\"El que, con motivo del\r\n              otorgamiento o formalización de un documento Público, ante un\r\n              funcionario Público, prestare declaración falsa sobre su\r\n              identidad, o estado, o cualquier otra circunstancia del hecho,\r\n              será castigado con tres a veinticuatro meses de Prisión\"\r\n            </p>\r\n            <td>\r\n              <h5>FECHA:</h5>\r\n            </td>\r\n            <td>\r\n              <h5>_____/_____/_________</h5>\r\n            </td>\r\n\r\n            <div style={{ padding: \"10px\", textAlign: \"right\" }}>\r\n              <h5>FIRMA ....................................</h5>\r\n              <p style={{ marginLeft: \"100px\" }}>\r\n                {this.dataPostu.primerNombre +\r\n                  \" \" +\r\n                  this.dataPostu.primerApellido}\r\n              </p>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container>\r\n          <div>\r\n            <td>\r\n              <h5>\r\n                FIRMA:______________________________ACLARACIÓN____________________________MATRÍCULA_________\r\n              </h5>\r\n            </td>\r\n            <p>\r\n              <strong>\r\n                De quien controló primariamente el formulario completo.\r\n              </strong>\r\n            </p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => <a href=\"#\" class=\"btn btn-success descargar\">DESCARGAR PDF</a>}\r\n          content={() => this.componentRef}\r\n        />\r\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;\r\n",["305","306"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\TableRowFamiliares.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\Educacion.js",["307","308","309","310","311","312","313"],"import React, { useEffect, useState } from \"react\";\r\nimport { Form, Button, Spinner, Jumbotron, Table } from \"react-bootstrap\";\r\nimport { map } from \"lodash\";\r\nimport { crearEstudiosBasicos } from \"../../../../api/auth\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserGraduate, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport BasicModal from \"../../../Modal/BasicModal\";\r\nimport OtrosEstudios from \"../OtrosEstudios\";\r\nimport TableRowEducacion from \"../TableRowEducacion\";\r\nimport { getIdPostu, setEstudiosBasicos } from \"../../../../api/auth\";\r\nimport { getEstudiosLocal, getEstudiosPersona } from \"../../../../api/tablas\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nexport default function Educacion(props) {\r\n  const { setguardadoBoton } = props;\r\n  //state que guarda el id del postulante en cero pero lo uso para cambiarlo una vez que di submit en datos personales\r\n  const [idPostulante, setIdPostulante] = useState(getIdPostu());\r\n  //Para manejar el Modal\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentModal, setContentModal] = useState(null);\r\n  const [refresh, setrefresh] = useState(false);\r\n  //funcion que abre el modal y le agrega el contenido de los form\r\n  const openModal = (content) => {\r\n    setShowModal(true);\r\n    setContentModal(content);\r\n  };\r\n  //state que va a guardar los estudios de la persona\r\n  const [estudios, setEstudios] = useState([]);\r\n  //retornarId(\"hola\");\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getEstudiosPersona(getIdPostu())\r\n      .then((response) => {\r\n        let listaEstudios = formatModel(response.data);\r\n        if (isMounted) {\r\n          setEstudios(listaEstudios);\r\n        }\r\n      })\r\n      .catch(() => {});\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n  //recibo el id de postulante (del local storage y cambio mi estado para luego asignarlo al form data)\r\n  useEffect(() => {\r\n    getIdPostu();\r\n    setIdPostulante(getIdPostu());\r\n    setFormData({\r\n      ...formData,\r\n      primeroPrimaria_persona_id: idPostulante,\r\n      segundoPrimaria_persona_id: idPostulante,\r\n      terceroPrimaria_persona_id: idPostulante,\r\n      cuartoPrimaria_persona_id: idPostulante,\r\n      quintoPrimaria_persona_id: idPostulante,\r\n      sextoPrimaria_persona_id: idPostulante,\r\n      primeroSecu_persona_id: idPostulante,\r\n      segundoSecu_persona_id: idPostulante,\r\n      terceroSecu_persona_id: idPostulante,\r\n      cuartoBach_persona_id: idPostulante,\r\n      quintoBach_persona_id: idPostulante,\r\n      sextoBach_persona_id: idPostulante,\r\n    });\r\n\r\n    return getIdPostu();\r\n  }, []);\r\n\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue());\r\n  //funcion que controla cuando se va a guardara el fomrulario\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setGuardadoLoading(true);\r\n    setEstudiosBasicos(JSON.stringify(formData));\r\n    crearEstudiosBasicos(formData)\r\n      .then((response) => {\r\n        if (response.code) {\r\n          toast.warning(response.message);\r\n        } else {\r\n          toast.success(\"Registro correcto\");\r\n          setFormData(initialFormValue());\r\n          setguardadoBoton(false);\r\n          localStorage.setItem(\r\n            \"estudiosGuardados\",\r\n            JSON.stringify(response.data)\r\n          );\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error del servidor\");\r\n      })\r\n      .finally(() => {\r\n        setGuardadoLoading(false);\r\n      });\r\n    //}\r\n  };\r\n  return (\r\n    <div>\r\n      <BasicModal show={showModal} setShow={setShowModal}>\r\n        {contentModal}\r\n      </BasicModal>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Jumbotron>\r\n          <div>\r\n            <h3>Primaria</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Año</th>\r\n                  <th>Nombre de institucion</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Primer Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.primeroPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          primeroPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Segundo Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.segundoPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          segundoPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Tercer Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.terceroPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          terceroPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Cuarto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.cuartoPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          cuartoPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Quinto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.quintoPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          quintoPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Sexto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de escuela/colegio\"\r\n                      value={formData.sextoPrimaria_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          sextoPrimaria_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n\r\n            <h3>Secundaria</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Año</th>\r\n                  <th>Nombre de institucion</th>\r\n                  <th hidden>tipo_estudio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Primer Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.primeroSecu_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          primeroSecu_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Segundo Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.segundoSecu_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          segundoSecu_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Tercer Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.terceroSecu_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          terceroSecu_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n            <h3>Bachillerato</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Año</th>\r\n                  <th>Nombre de institucion</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Cuarto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.cuartoBach_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          cuartoBach_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Quinto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.quintoBach_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          quintoBach_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      defaultValue=\"Sexto Año\"\r\n                      readOnly\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de liceo/colegio\"\r\n                      value={formData.sextoBach_nombreInstituto}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          sextoBach_nombreInstituto: e.target.value,\r\n                        }) | setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                      onKeyUp={() =>\r\n                        setEstudiosBasicos(JSON.stringify(formData))\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n\r\n            <h3>Otros Estudios Realizados</h3>\r\n            <Button\r\n              variant=\"agregar\"\r\n              onClick={() =>\r\n                openModal(<OtrosEstudios setShowModal={setShowModal} />)\r\n              }\r\n            >\r\n              <span>\r\n                Añadir <FontAwesomeIcon icon={faUserGraduate} />{\" \"}\r\n              </span>\r\n            </Button>\r\n            <Table id=\"tabla\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Años Cursados</th>\r\n                  <th>Nombre del Estudio/Capacitacion</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(estudios.length === 0) | (estudios === null) ? (\r\n                  <tr>No hay Estudios ingresados</tr>\r\n                ) : (\r\n                  map(estudios, (est, index) => (\r\n                    <TableRowEducacion estudio={est} key={index} />\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <Button variant=\"guardar\" type=\"submit\">\r\n            {!guardadoLoading ? \"Guardar  \" : <Spinner animation=\"border\" />}\r\n            <FontAwesomeIcon icon={faSave} />\r\n          </Button>\r\n        </Jumbotron>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction llenarDelStorage(campo, defval) {\r\n  let datos = JSON.parse(localStorage.getItem(\"estudioBasico\"));\r\n  if (datos != undefined) {\r\n    return datos[campo];\r\n  }\r\n  return defval;\r\n}\r\nfunction llenarDelStorageId(campo, defval) {\r\n  let datos = JSON.parse(localStorage.getItem(\"estudiosGuardados\"));\r\n  if (datos != undefined) {\r\n    return datos[campo];\r\n  }\r\n  return defval;\r\n}\r\n/* function retornarId(nombreEstudio) {\r\n  let listaEstudios = localStorage.getItem(\"estudiosGuardados\");\r\n  console.log(listaEstudios);\r\n} */\r\n\r\n/*function capitalize(str) {\r\n  return str[0].toUpperCase() + str.substring(1);\r\n}*/\r\nfunction initialFormValue() {\r\n  let data = {\r\n    primeroPrimaria_anioEstudio: \"Primer año\",\r\n    primeroPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"primeroPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    primeroPrimaria_tipo_estudio_id: \"1\",\r\n    primeroPrimaria_persona_id: \"\",\r\n\r\n    segundoPrimaria_anioEstudio: \"Segundo año\",\r\n    segundoPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"segundoPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    segundoPrimaria_tipo_estudio_id: \"1\",\r\n    segundoPrimaria_persona_id: \"\",\r\n    segundoPrimaria_id: \"\",\r\n\r\n    terceroPrimaria_anioEstudio: \"Tercer año\",\r\n    terceroPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"terceroPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    terceroPrimaria_tipo_estudio_id: \"1\",\r\n    terceroPrimaria_persona_id: \"\",\r\n    terceroPrimaria_id: \"\",\r\n\r\n    cuartoPrimaria_anioEstudio: \"Cuarto año\",\r\n    cuartoPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"cuartoPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    cuartoPrimaria_tipo_estudio_id: \"1\",\r\n    cuartoPrimaria_persona_id: \"\",\r\n    cuartoPrimaria_id: \"\",\r\n\r\n    quintoPrimaria_anioEstudio: \"Quinto año\",\r\n    quintoPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"quintoPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    quintoPrimaria_tipo_estudio_id: \"1\",\r\n    quintoPrimaria_persona_id: \"\",\r\n    quintoPrimaria_id: \"\",\r\n\r\n    sextoPrimaria_anioEstudio: \"Sexto año\",\r\n    sextoPrimaria_nombreInstituto: llenarDelStorage(\r\n      \"sextoPrimaria_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    sextoPrimaria_tipo_estudio_id: \"1\",\r\n    sextoPrimaria_persona_id: \"\",\r\n    sextoPrimaria_id: \"\",\r\n\r\n    primeroSecu_anioEstudio: \"Primer año\",\r\n    primeroSecu_nombreInstituto: llenarDelStorage(\r\n      \"primeroSecu_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    primeroSecu_tipo_estudio_id: \"2\",\r\n    primeroSecu_persona_id: \"\",\r\n    primeroSecu_id: \"\",\r\n\r\n    segundoSecu_anioEstudio: \"Segundo año\",\r\n    segundoSecu_nombreInstituto: llenarDelStorage(\r\n      \"segundoSecu_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    segundoSecu_tipo_estudio_id: \"2\",\r\n    segundoSecu_persona_id: \"\",\r\n    segundoSecu_id: \"\",\r\n\r\n    terceroSecu_anioEstudio: \"Tercer año\",\r\n    terceroSecu_nombreInstituto: llenarDelStorage(\r\n      \"terceroSecu_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    terceroSecu_tipo_estudio_id: \"2\",\r\n    terceroSecu_persona_id: \"\",\r\n    terceroSecu_id: \"\",\r\n\r\n    cuartoBach_anioEstudio: \"Cuarto año\",\r\n    cuartoBach_nombreInstituto: llenarDelStorage(\r\n      \"cuartoBach_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    cuartoBach_tipo_estudio_id: \"3\",\r\n    cuartoBach_persona_id: \"\",\r\n    cuartoBach_id: \"\",\r\n\r\n    quintoBach_anioEstudio: \"Quinto año\",\r\n    quintoBach_nombreInstituto: llenarDelStorage(\r\n      \"quintoBach_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    quintoBach_tipo_estudio_id: \"3\",\r\n    quintoBach_persona_id: \"\",\r\n    quintoBach_id: \"\",\r\n\r\n    sextoBach_anioEstudio: \"Sexto año\",\r\n    sextoBach_nombreInstituto: llenarDelStorage(\r\n      \"sextoBach_nombreInstituto\",\r\n      \"\"\r\n    ),\r\n    sextoBach_tipo_estudio_id: \"3\",\r\n    sextoBach_persona_id: \"\",\r\n    sextoBach_id: \"\",\r\n  };\r\n\r\n  return data;\r\n}\r\n\r\nfunction formatModel(estudios) {\r\n  //lista temporal\r\n  const estudiosTemp = [];\r\n\r\n  estudios.forEach((estudio) => {\r\n    estudiosTemp.push({\r\n      //creo el formato\r\n      id: estudio.id,\r\n      nombreInstituto: estudio.nombreInstituto,\r\n      anioEstudio: estudio.anioEstudio,\r\n    });\r\n  });\r\n  return estudiosTemp;\r\n}\r\n",["314","315"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\FormPostulanteEducacion.js",[],["316","317"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\index.js",["318","319","320","321"],"import React from \"react\";\nimport ReactDOM, { render } from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Footer from \"./components/Layout/Footer\";\nimport Header from \"./components/Layout/Header\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Pdf from \"./components/Pdf/Pdf\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/*ReactDOM.render(\n    <Header />,\n   <App />,\n    <Footer />,\n   document.getElementById(\"root\")\n );*/\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Footer.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Layout\\Header.js",["322","323","324"],"import React from \"react\";\r\nimport { Nav, Navbar, Form, FormControl, Button } from \"react-bootstrap\";\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">Formulario 04</Navbar.Brand>\r\n        <Nav className=\"mr-auto\"></Nav>\r\n      </Navbar>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\Routing.js",["325"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { map } from \"lodash\";\r\nimport configRouting from \"./configRouting\";\r\n\r\nexport default function Routing() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {map(configRouting, (route, index) => (\r\n          <Route key={index} path={route.path} exact={route.exact}>\r\n            <route.page />\r\n          </Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\Index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\tablas.js",["326","327","328"],"import {\r\n  API_HOST,\r\n  ESTUDIOS,\r\n  RESP_POSTU,\r\n  RESP_MADRE,\r\n  RESP_PADRE,\r\n  RESP_PAREJA,\r\n  FAMILIARES,\r\n} from \"../utils/constant\";\r\n\r\nexport function getEstudiosPersona(idPersona) {\r\n  const url = `${API_HOST}estudios/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n/*esto lo uso para formar el pdf*/\r\nexport function listaOtrosEstudios(id) {\r\n  var lista = [];\r\n  getEstudiosPersona(id).then((response) => {\r\n    lista = formatModel(response.data);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModel(estudios) {\r\n  //lista temporal\r\n  const estudiosTemp = [];\r\n\r\n  estudios.forEach((estudio) => {\r\n    estudiosTemp.push({\r\n      //creo el formato\r\n      id: estudio.id,\r\n      nombreInstituto: estudio.nombreInstituto,\r\n      anioEstudio: estudio.anioEstudio,\r\n    });\r\n  });\r\n  localStorage.setItem(ESTUDIOS, JSON.stringify(estudiosTemp));\r\n  return;\r\n}\r\n\r\nexport function getEstudiosLocal() {\r\n  var guardado = localStorage.getItem(ESTUDIOS);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function getRespuestasPersona(idPersona) {\r\n  const url = `${API_HOST}respuestaPersona/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function listarRespuestas(id, tipoPer) {\r\n  var lista = [];\r\n  getRespuestasPersona(id).then((response) => {\r\n    lista = formatModelResp(response.data, tipoPer);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModelResp(respuestas, tipoPer) {\r\n  //lista temporal\r\n  const respuestasTemp = [];\r\n\r\n  respuestas.forEach((respuesta) => {\r\n    respuestasTemp.push({\r\n      //creo el formato\r\n      idPregunta: respuesta.pregunta_id,\r\n      idRespuesta: respuesta.id,\r\n      textoPregunta: respuesta.textoPregunta,\r\n      respuesta: respuesta.respuesta,\r\n    });\r\n  });\r\n\r\n  switch (tipoPer) {\r\n    case 1:\r\n      localStorage.setItem(RESP_POSTU, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 2:\r\n      localStorage.setItem(RESP_MADRE, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 3:\r\n      localStorage.setItem(RESP_PADRE, JSON.stringify(respuestasTemp));\r\n      break;\r\n    case 10:\r\n      localStorage.setItem(RESP_PAREJA, JSON.stringify(respuestasTemp));\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return;\r\n}\r\n\r\nexport function getRespuestasLocal(tipoPer) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      var guardado = localStorage.getItem(RESP_POSTU);\r\n      break;\r\n    case 2:\r\n      var guardado = localStorage.getItem(RESP_MADRE);\r\n\r\n      break;\r\n    case 3:\r\n      var guardado = localStorage.getItem(RESP_PADRE);\r\n\r\n      break;\r\n    case 10:\r\n      var guardado = localStorage.getItem(RESP_PAREJA);\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n/**/\r\n\r\nexport function getOtrosFamiliaresPersona(idPersona) {\r\n  const url = `${API_HOST}pariente/${idPersona}`;\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function listaOtrosFamiliaresPersona(id) {\r\n  var lista = [];\r\n  getOtrosFamiliaresPersona(id).then((response) => {\r\n    lista = formatModelOtrosFliares(response.data);\r\n    // console.log(lista);\r\n\r\n    return lista;\r\n  });\r\n}\r\nexport function formatModelOtrosFliares(fliares) {\r\n  //lista temporal\r\n  const fliaresTemp = [];\r\n\r\n  fliares.forEach((fliar) => {\r\n    fliaresTemp.push({\r\n      //creo el formato\r\n      id: fliar.familiar_id,\r\n      primerNombre: fliar.primerNombre,\r\n      primerApellido: fliar.primerApellido,\r\n      fechaNacimiento: fliar.fechaNacimiento,\r\n      tipo_persona_id: fliar.tipo_persona_id,\r\n      tipoPersona: fliar.nombre,\r\n    });\r\n  });\r\n  localStorage.setItem(FAMILIARES, JSON.stringify(fliaresTemp));\r\n  return;\r\n}\r\nexport function getfliaresLocal() {\r\n  var guardado = localStorage.getItem(FAMILIARES);\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function getPreguntasApi() {\r\n  const url = `${API_HOST}preguntas`;\r\n\r\n  const params = {\r\n    headers: {\r\n      \"Content-Type\": \"application-json\",\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function setPreguntasPostu(data) {\r\n  return localStorage.setItem(RESP_POSTU, data);\r\n}\r\n\r\nexport function getPreguntasPostu() {\r\n  var guardado = localStorage.getItem(RESP_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasMadre(data) {\r\n  return localStorage.setItem(RESP_MADRE, data);\r\n}\r\n\r\nexport function getPreguntasMadre() {\r\n  var guardado = localStorage.getItem(RESP_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasPadre(data) {\r\n  return localStorage.setItem(RESP_PADRE, data);\r\n}\r\n\r\nexport function getPreguntasPadre() {\r\n  var guardado = localStorage.getItem(RESP_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setPreguntasPareja(data) {\r\n  return localStorage.setItem(RESP_PAREJA, data);\r\n}\r\n\r\nexport function getPreguntasPareja() {\r\n  var guardado = localStorage.getItem(RESP_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\auth.js",["329","330","331","332"],"import {\r\n  API_HOST,\r\n  ID_POSTU,\r\n  ID_MADRE,\r\n  ID_PAREJA,\r\n  ID_PADRE,\r\n  ID_OTRO_FLIAR,\r\n  DATA_POSTU,\r\n  DATA_MADRE,\r\n  DATA_PADRE,\r\n  DATA_PAREJA,\r\n  EST_BASICO,\r\n  LAB_POSTU,\r\n  LAB_MADRE,\r\n  LAB_PADRE,\r\n  LAB_PAREJA,\r\n} from \"../utils/constant\";\r\n\r\n/**LIMPIAR ESTA CLASE POR FAVOR */\r\nexport function crearPostulante(persona) {\r\n  const url = `${API_HOST}persona`;\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function updatePostulante(persona, id) {\r\n  const url = `${API_HOST}persona/${id}`;\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearFamiliarPostulante(persona) {\r\n  const url = `${API_HOST}personaFamiliar`;\r\n\r\n  //console.log(persona);\r\n  // console.log(url);\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  //console.log(personaTemp);\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function updateFamiliarPostulante(persona, idPersona) {\r\n  const url = `${API_HOST}personaFamiliar/${idPersona}`;\r\n\r\n  //console.log(persona);\r\n  // console.log(url);\r\n\r\n  const personaTemp = {\r\n    ...persona,\r\n    correoElectronico: persona.correoElectronico.toLowerCase(),\r\n  };\r\n\r\n  //console.log(personaTemp);\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(personaTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearOcupacion(ocupacion) {\r\n  const url = `${API_HOST}ocupacion`;\r\n  console.log(ocupacion);\r\n  console.log(url);\r\n\r\n  const ocupacionTemp = {\r\n    ...ocupacion,\r\n    cargo_funcion: ocupacion.cargo_funcion.toLowerCase(),\r\n    nombreEmpresa: ocupacion.nombreEmpresa.toLowerCase(),\r\n    direccion: ocupacion.direccion.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(ocupacionTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\nexport function updateOcupacion(ocupacion, idOcupacion) {\r\n  const url = `${API_HOST}ocupacion/${idOcupacion}`;\r\n\r\n  const ocupacionTemp = {\r\n    ...ocupacion,\r\n    cargo_funcion: ocupacion.cargo_funcion.toLowerCase(),\r\n    nombreEmpresa: ocupacion.nombreEmpresa.toLowerCase(),\r\n    direccion: ocupacion.direccion.toLowerCase(),\r\n  };\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(ocupacionTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearEstudiosBasicos(estudios) {\r\n  const url = `${API_HOST}estudiosBasicos`;\r\n  console.log(estudios);\r\n  console.log(url);\r\n  const estudiosTemp = {\r\n    ...estudios,\r\n    primeroPrimaria_nombreInstituto: estudios.primeroPrimaria_nombreInstituto.toLowerCase(),\r\n  };\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(estudiosTemp),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearEstudio(estudio) {\r\n  const url = `${API_HOST}estudio`;\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(estudio),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearOtroFliar(familiar) {\r\n  const url = `${API_HOST}familiar`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(familiar),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearParentesco(parientes) {\r\n  const url = `${API_HOST}parentesco`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(parientes),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function crearRespuesta(respuesta) {\r\n  const url = `${API_HOST}respuesta`;\r\n\r\n  const params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(respuesta),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function updateRespuesta(respuesta, idRespuesta) {\r\n  const url = `${API_HOST}respuesta/${idRespuesta}`;\r\n\r\n  const params = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(respuesta),\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error al guardar los datos\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nexport function setIdsApi(tipoPer, id) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      localStorage.setItem(ID_POSTU, id);\r\n      break;\r\n    case 2:\r\n      localStorage.setItem(ID_MADRE, id);\r\n      break;\r\n    case 3:\r\n      localStorage.setItem(ID_PADRE, id);\r\n      break;\r\n    case 10:\r\n      localStorage.setItem(ID_PAREJA, id);\r\n      break;\r\n\r\n    default:\r\n      localStorage.setItem(ID_OTRO_FLIAR, id);\r\n      break;\r\n  }\r\n}\r\n\r\nexport function getSuId(tipoPer) {\r\n  switch (tipoPer) {\r\n    case 1:\r\n      return localStorage.getItem(ID_POSTU);\r\n      break;\r\n    case 2:\r\n      return localStorage.getItem(ID_MADRE);\r\n      break;\r\n    case 3:\r\n      return localStorage.getItem(ID_PADRE);\r\n      break;\r\n    case 10:\r\n      return localStorage.getItem(ID_PAREJA);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport function getIdPostu() {\r\n  return localStorage.getItem(ID_POSTU);\r\n}\r\nexport function getIdMadre() {\r\n  return localStorage.getItem(ID_MADRE);\r\n}\r\nexport function getIdPadre() {\r\n  return localStorage.getItem(ID_PADRE);\r\n}\r\nexport function getIdPareja() {\r\n  return localStorage.getItem(ID_PAREJA);\r\n}\r\nexport function getIdOtro() {\r\n  return localStorage.getItem(ID_OTRO_FLIAR);\r\n}\r\n\r\nexport function comboPaises() {\r\n  const url = `${API_HOST}paises`;\r\n\r\n  const params = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(),\r\n  };\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      if (response.status >= 200 && response.status < 300) {\r\n        return response.json();\r\n      }\r\n      return { code: 404, message: \"Error\" };\r\n    })\r\n    .then((result) => {\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\n/**ESTA HAY QUE SACARLO DE ACA */\r\nexport function setDataPostu(data) {\r\n  return localStorage.setItem(DATA_POSTU, data);\r\n}\r\n\r\nexport function getDataPostu() {\r\n  var guardado = localStorage.getItem(DATA_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setDataMadre(data) {\r\n  return localStorage.setItem(DATA_MADRE, data);\r\n}\r\n\r\nexport function getDataMadre() {\r\n  var guardado = localStorage.getItem(DATA_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\nexport function setDataPadre(data) {\r\n  return localStorage.setItem(DATA_PADRE, data);\r\n}\r\n\r\nexport function getDataPadre() {\r\n  var guardado = localStorage.getItem(DATA_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\nexport function setDataPareja(data) {\r\n  return localStorage.setItem(DATA_PAREJA, data);\r\n}\r\n\r\nexport function getDataPareja() {\r\n  var guardado = localStorage.getItem(DATA_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setEstudiosBasicos(data) {\r\n  return localStorage.setItem(EST_BASICO, data);\r\n}\r\n\r\nexport function getEstudiosBasicos() {\r\n  var guardado = localStorage.getItem(EST_BASICO);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPostu(data) {\r\n  return localStorage.setItem(LAB_POSTU, data);\r\n}\r\n\r\nexport function getLabPostu() {\r\n  var guardado = localStorage.getItem(LAB_POSTU);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabMadre(data) {\r\n  return localStorage.setItem(LAB_MADRE, data);\r\n}\r\n\r\nexport function getLabMadre() {\r\n  var guardado = localStorage.getItem(LAB_MADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPadre(data) {\r\n  return localStorage.setItem(LAB_PADRE, data);\r\n}\r\n\r\nexport function getLabPadre() {\r\n  var guardado = localStorage.getItem(LAB_PADRE);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n\r\nexport function setLabPareja(data) {\r\n  return localStorage.setItem(LAB_PAREJA, data);\r\n}\r\n\r\nexport function getLabPareja() {\r\n  var guardado = localStorage.getItem(LAB_PAREJA);\r\n\r\n  return JSON.parse(guardado);\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\index.js",[],["333","334"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\FormOtrosFamiliares.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaPreguntas\\FormParejaPreguntas.js",["335"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormParejaPreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Segundo paso: Preguntas</h3>\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralPareja\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/otrosFliares\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\FormPareja.js",["336"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPareja() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\FormPadreLaboral.js",["337"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadreLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Segundo paso: Informacion laboral</h3>\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/datosPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadrePreguntas\\FormMadrePreguntas.js",["338"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormMadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(2);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de la Madre</h2>\r\n        <h3>Tercer paso: Preguntas</h3>\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralMadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\Preguntas.js",["339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React, { useState, useEffect } from \"react\";\r\nimport { map } from \"lodash\";\r\nimport { Form, Button, Table, Jumbotron, Container } from \"react-bootstrap\";\r\n\r\nimport { getPreguntasApi, getRespuestasPersona } from \"../../../../api/tablas\";\r\n\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\n\r\nimport TableRow from \"../TableRow/index\";\r\nimport { getSuId } from \"../../../../api/auth\";\r\n\r\nexport default function Preguntas(props) {\r\n  const { tipoPerstate } = props;\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [idPersona, setidpersona] = useState(getSuId(tipoPerstate));\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [contentModal, setContentModal] = useState(null);\r\n  const [respuesta, setrespuestas] = useState([]);\r\n\r\n  //useEffect que se  encarga de cargar las preguntas y guardarlas en un map para cargarlo en la tabla\r\n  useEffect(() => {\r\n    getPreguntasApi()\r\n      .then((response) => {\r\n        let listaPreg = formatModel(\r\n          response.data,\r\n          tipoPerstate,\r\n          getSuId(tipoPerstate)\r\n        );\r\n        console.log(\"Lista preg\");\r\n        console.log(listaPreg);\r\n        setPreguntas(listaPreg);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRespuestasPersona(idPersona)\r\n      .then((response) => {\r\n        let listaPreg = formatModelRespuesta(\r\n          response.data,\r\n          getSuId(tipoPerstate)\r\n        );\r\n        console.log(\"lista resp\");\r\n        console.log(listaPreg);\r\n        setrespuestas(listaPreg);\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    // e.preventDefault();\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Form onSubmit={onSubmit}>\r\n          <Jumbotron>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Pregunta</th>\r\n\r\n                  <th>Respuestas</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/**En esta parte hago un if que controla si el array de preguntas no tiene nada cargado aun\r\n                 * muestra el mensaje que no hay preguntas, sino hace un map con la lista de preguntas y llama al\r\n                 * tableRow que yo hice mandandole los parametros del map.\r\n                 */}\r\n                {respuesta.length == 0 ? (\r\n                  preguntas.length == 0 ? (\r\n                    <tr>No hay Respuestas ingresadas aun</tr>\r\n                  ) : (\r\n                    map(preguntas, (preg, index) => (\r\n                      <TableRow\r\n                        pregunta={preg}\r\n                        key={index}\r\n                        idPersona={idPersona}\r\n                        tipoPerstate={tipoPerstate}\r\n                      />\r\n                    ))\r\n                  )\r\n                ) : (\r\n                  map(respuesta, (preg, index) => (\r\n                    <TableRow\r\n                      pregunta={preg}\r\n                      key={index}\r\n                      idPersona={idPersona}\r\n                      tipoPerstate={tipoPerstate}\r\n                    />\r\n                  ))\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Jumbotron>\r\n        </Form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n/**Esta funcion se encarga de dar formato a la respuesta del servidor cuando pido todas las preguntas segun el tipo de persona\r\n * respuesta del servidor= preg\r\n * tipoPerState = tipo de persona\r\n * idPersona = obtengo el id de persona desde el localStorage esto facilita el insert de la respuesta posteriormente xq ya tengo el id de la persona\r\n */\r\nfunction formatModel(preg, tipoPerstate, idPersona) {\r\n  //lista temporal\r\n  const preguntasTemp = [];\r\n  //si es postulante\r\n  if (tipoPerstate == 1) {\r\n    preg.forEach((pregunta) => {\r\n      //tomo las preguntas que son para el tipoPer 1 (postulante)\r\n      if (pregunta.tipo_persona_id == 1) {\r\n        preguntasTemp.push({\r\n          //creo el formato\r\n          id: pregunta.id,\r\n          texto: pregunta.textoPregunta,\r\n          tipo_persona: pregunta.tipo_persona_id,\r\n          persona_id: idPersona,\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    preg.forEach((pregunta) => {\r\n      //si la pregunta es para  cualquiera persona menos postulante\r\n      if (pregunta.tipo_persona_id != 1) {\r\n        preguntasTemp.push({\r\n          //creo formato\r\n          id: pregunta.id,\r\n          texto: pregunta.textoPregunta,\r\n          tipo_persona: pregunta.tipo_persona_id,\r\n          persona_id: idPersona,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return preguntasTemp;\r\n}\r\n\r\nfunction formatModelRespuesta(resp, idPersona) {\r\n  //lista temporal\r\n  const respuestasTemp = [];\r\n  //si es postulante\r\n\r\n  resp.forEach((respuesta) => {\r\n    //tomo las preguntas que son para el tipoPer 1 (postulante)\r\n\r\n    respuestasTemp.push({\r\n      //creo el formato\r\n      idPregunta: respuesta.pregunta_id,\r\n      idRespuesta: respuesta.id,\r\n      texto: respuesta.textoPregunta,\r\n      persona_id: idPersona,\r\n      respuesta: respuesta.respuesta,\r\n    });\r\n  });\r\n\r\n  return respuestasTemp;\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\index.js",[],["352","353"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\validations.js",["354","355","356","357","358","359","360"],"export function isEmailValid(email) {\n  // eslint-disable-next-line no-useless-escape\n\n  const emailValid = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n  return emailValid.test(String(email).toLowerCase());\n}\n\nexport function sinCaracteresEspeciales(content) {\n  const validacion = /^[A-Za-z0-9\\-! ,ñ@\\.\\(\\)]+$/;\n\n  return validacion.test(String(content)).toLowerCase();\n}\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\AgregarOtrosFamiliares.js",["361","362","363","364","365","366","367","368"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { values, size } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport {\r\n  crearOtroFliar,\r\n  setIdsApi,\r\n  getIdPostu,\r\n  getIdOtro,\r\n  crearParentesco,\r\n} from \"../../../../api/auth\";\r\nimport { getTipoPersonaApi } from \"../../../../api/combos\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport range from \"lodash/range\";\r\n\r\nexport default function AgregarOtrosFamiliares(props) {\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue());\r\n  const { setShowModal, contador, setcontador } = props;\r\n\r\n  useEffect(() => {\r\n    getTipoPersonaApi()\r\n      .then((response) => {\r\n        let lista = response.data;\r\n        let opciones = lista.map((tipopersona) => {\r\n          return { id: `${tipopersona.id}`, nombre: `${tipopersona.nombre}` };\r\n        });\r\n        cargarCombos(opciones, \"select_form_personas\");\r\n        return { opciones: opciones };\r\n      })\r\n      .catch(() => {});\r\n  }, []);\r\n\r\n  /*DATE PICKER PERSONALIZADO**********************************************/\r\n  const [startDate, setStartDate] = useState(null);\r\n\r\n  const years = range(1920, new Date().getFullYear() + 1, 1);\r\n  const months = [\r\n    \"Enero\",\r\n    \"Febrero\",\r\n    \"Marzo\",\r\n    \"Abril\",\r\n    \"Mayo\",\r\n    \"Junio\",\r\n    \"Julio\",\r\n    \"Agosto\",\r\n    \"Setiembre\",\r\n    \"Octubre\",\r\n    \"Noviembre\",\r\n    \"Diciembre\",\r\n  ];\r\n\r\n  function formatearDate(startDate) {\r\n    let year = startDate.getFullYear();\r\n    let month = \"\" + (startDate.getMonth() + 1);\r\n    let day = \"\" + startDate.getDate();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    let fechaFinal = year + \"-\" + month + \"-\" + day;\r\n    return fechaFinal;\r\n  }\r\n  /*DATE PICKER PERSONALIZADO**********************************************/\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(false);\r\n    //lo siguiente se encarga de recorrer el form y ver si tiene el campo relleno o no\r\n    //si el valid count tiene tiene el mismo numero que el total de keys del formdata entonces significa que tiene todos los campos rellenados\r\n\r\n    setGuardadoLoading(true);\r\n    crearOtroFliar(formData)\r\n      .then((response) => {\r\n        if (response.code) {\r\n          toast.warning(response.message);\r\n        } else {\r\n          toast.success(\"Registro correcto\");\r\n          setcontador(contador + 1);\r\n          setFormData(initialFormValue());\r\n          setIdsApi(0, response.data);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error del servidor\");\r\n      })\r\n      .finally(() => {\r\n        setGuardadoLoading(false);\r\n        crearParentesco(jsonParientes());\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Agregar nuevo Familiar</h2>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Parentezco</th>\r\n              <th>Primer nombre</th>\r\n              <th>Primer Apellido</th>\r\n              <th>CI (Sin puntos ni guión)</th>\r\n              <th>Fecha de Nacimiento</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <Form.Control\r\n                  id=\"select_form_personas\"\r\n                  as=\"select\"\r\n                  defaultValue=\"Seleccione\"\r\n                  value={formData.tipo_persona_id}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      tipo_persona_id: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"\"> Seleccione</option>\r\n                </Form.Control>\r\n              </th>\r\n\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.primerNombre}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      primerNombre: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.primerApellido}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      primerApellido: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={formData.cedula}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      cedula: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                <DatePicker\r\n                  dateFormat=\"yyyy/MM/dd\"\r\n                  renderCustomHeader={({\r\n                    date,\r\n                    changeYear,\r\n                    changeMonth,\r\n                    decreaseMonth,\r\n                    increaseMonth,\r\n                    prevMonthButtonDisabled,\r\n                    nextMonthButtonDisabled,\r\n                  }) => (\r\n                    <div\r\n                      style={{\r\n                        margin: 10,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <button\r\n                        onClick={decreaseMonth}\r\n                        disabled={prevMonthButtonDisabled}\r\n                      >\r\n                        {\"<\"}\r\n                      </button>\r\n                      <select\r\n                        value={date.getFullYear()}\r\n                        onChange={({ target: { value } }) => changeYear(value)}\r\n                      >\r\n                        {years.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      <select\r\n                        value={months[date.getMonth()]}\r\n                        onChange={({ target: { value } }) =>\r\n                          changeMonth(months.indexOf(value))\r\n                        }\r\n                      >\r\n                        {months.map((option) => (\r\n                          <option key={option} value={option}>\r\n                            {option}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n\r\n                      <button\r\n                        onClick={increaseMonth}\r\n                        disabled={nextMonthButtonDisabled}\r\n                      >\r\n                        {\">\"}\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  selected={startDate}\r\n                  onChange={(date) =>\r\n                    setStartDate(date) |\r\n                    setFormData({\r\n                      ...formData,\r\n                      fechaNacimiento: formatearDate(date),\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button variant=\"agregar\" type=\"submit\">\r\n          <FontAwesomeIcon icon={faSave} />\r\n          Guardar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialFormValue() {\r\n  return {\r\n    primerNombre: \"\",\r\n    primerApellido: \"\",\r\n    fechaNacimiento: \"\",\r\n    cedula: \"\",\r\n    tipo_persona_id: \"\",\r\n  };\r\n}\r\n\r\nfunction jsonParientes() {\r\n  return {\r\n    postulante_id: getIdPostu(),\r\n    familiar_id: getIdOtro(),\r\n  };\r\n}\r\n\r\nfunction cargarCombos(listaOpciones, idComponente) {\r\n  var options = listaOpciones;\r\n  var listaACargar = document.getElementById(idComponente);\r\n\r\n  for (var i in options) {\r\n    //saco las opciones de los familiares madre padre y pareja y postulante\r\n    if (\r\n      (options[i].id != 2) &\r\n      (options[i].id != 3) &\r\n      (options[i].id != 10) &\r\n      (options[i].id != 14) &\r\n      (options[i].id != 1)\r\n    ) {\r\n      // creamos un elemento de tipo option\r\n      var opt = document.createElement(\"option\");\r\n      // le damos un valor\r\n      opt.value = options[i].id;\r\n      // le ponemos un texto\r\n      opt.textContent = options[i].nombre;\r\n      // lo agregamos al select\r\n      listaACargar.options.add(opt);\r\n    }\r\n  }\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\OtrosEstudios\\OtrosEstudios.js",["369","370","371"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { values, size } from \"lodash\";\r\nimport { listaOtrosEstudios } from \"../../../../api/tablas\";\r\nimport { crearEstudio, getIdPostu } from \"../../../../api/auth\";\r\n\r\nexport default function OtrosEstudios(props) {\r\n  //state que guarda el id del postulante en cero pero lo uso para cambiarlo una vez que di submit en datos personales\r\n  const [idPostulante, setIdPostulante] = useState(getIdPostu());\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue());\r\n  const { setShowModal } = props;\r\n\r\n  //recibo el id de postulante (del local storage y cambio mi estado para luego asignarlo al form data)\r\n  useEffect(() => {\r\n    setIdPostulante(getIdPostu());\r\n    setFormData({\r\n      ...formData,\r\n      persona_id: getIdPostu(),\r\n    });\r\n\r\n    return getIdPostu();\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowModal(false);\r\n    let validCount = 0;\r\n    values(formData).some((value) => {\r\n      value && validCount++;\r\n      return null;\r\n    });\r\n\r\n    if (validCount !== size(formData)) {\r\n      toast.warning(\"Faltan campos que completar\");\r\n    } else {\r\n      setGuardadoLoading(true);\r\n      crearEstudio(formData)\r\n        .then((response) => {\r\n          if (response.code) {\r\n            toast.warning(response.message);\r\n          } else {\r\n            toast.success(\"Registro correcto\");\r\n            listaOtrosEstudios(getIdPostu());\r\n            setFormData(initialFormValue());\r\n          }\r\n        })\r\n        .catch(() => {\r\n          toast.error(\"Error del servidor\");\r\n        })\r\n        .finally(() => {\r\n          setGuardadoLoading(false);\r\n          window.location.reload();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Agregar nuevo Estudio</h2>\r\n\r\n      <Form onSubmit={onSubmit}>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Estudio/Capacitacion</th>\r\n              <th>Años Cursados</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Nombre\"\r\n                  value={formData.nombreInstituto}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      nombreInstituto: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n              <th>\r\n                {\" \"}\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Años Cursados\"\r\n                  value={formData.anioEstudio}\r\n                  onChange={(e) =>\r\n                    setFormData({\r\n                      ...formData,\r\n                      anioEstudio: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n        <Button variant=\"agregar\" type=\"submit\">\r\n          <FontAwesomeIcon icon={faSave} />\r\n          Guardar\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialFormValue() {\r\n  return {\r\n    anioEstudio: \"\",\r\n    nombreInstituto: \"\",\r\n    tipo_estudio_id: \"4\",\r\n    persona_id: \"\",\r\n  };\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\FormPostulante.js",["372"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"./FormPostulante.scss\";\r\n\r\nexport default function FormPostulante() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/educacionPostulante\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\nver el if del boton\r\n\r\ndisabled={!GUARDE_DATOS_POSTU == 0 ? \"false\" : guardadoBoton}\r\n*/\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\DatosPersonales.js",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteLaboral\\FormPostulanteLaboral.js",["390"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./FormPostulanteLaboral.scss\";\r\n\r\nexport default function FormPostulanteLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Tercer paso: Informacion laboral</h3>\r\n\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n        <Link to=\"/educacionPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPostulante\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\Laboral.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button, Spinner, Jumbotron } from \"react-bootstrap\";\r\nimport { values, size } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../FormPostulante/FormPostulante.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport {\r\n  crearOcupacion,\r\n  updateOcupacion,\r\n  getSuId,\r\n  setLabPostu,\r\n  setLabMadre,\r\n  setLabPadre,\r\n  setLabPareja,\r\n} from \"../../../../api/auth\";\r\n\r\nexport default function Laboral(props) {\r\n  const { tipoPerstate, setguardadoBoton } = props;\r\n  //state que guarda el id del postulante en cero pero lo uso para cambiarlo una vez que di submit en datos personales\r\n  const [idPostulante, setIdPostulante] = useState(0);\r\n  //state para hacer funcionar el Spinner\r\n  const [guardadoLoading, setGuardadoLoading] = useState(false);\r\n  //state que guarda la info del formulario\r\n  const [formData, setFormData] = useState(initialFormValue(tipoPerstate));\r\n  //funcion que controla cuando se va a guardara el fomrulario\r\n\r\n  useEffect(() => {\r\n    getSuId(tipoPerstate);\r\n    setIdPostulante(getSuId(tipoPerstate));\r\n\r\n    //console.log(idPostulante);\r\n    setFormData({\r\n      ...formData,\r\n      persona_id: getSuId(tipoPerstate),\r\n    });\r\n  }, []);\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //lo siguiente se encarga de recorrer el form y ver si tiene el campo relleno o no\r\n    //si el valid count tiene tiene el mismo numero que el total de keys del formdata entonces significa que tiene todos los campos rellenados\r\n\r\n    setGuardadoLoading(true);\r\n    if (tipoPerstate === 1) {\r\n      if (localStorage.getItem(\"guardadoLabPostu\") == null) {\r\n        crearOcupacion(formData)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Registro correcto\");\r\n              localStorage.setItem(\"guardadoLabPostu\", \"true\");\r\n              setLabPostu(JSON.stringify(formData));\r\n              localStorage.setItem(\"idLabPostu\", response.data);\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      } else {\r\n        let idOcupacion = localStorage.getItem(\"idLabPostu\");\r\n        updateOcupacion(formData, idOcupacion)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Actualizacion correcta\");\r\n              setLabPostu(JSON.stringify(formData));\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      }\r\n    }\r\n    if (tipoPerstate === 2) {\r\n      if (localStorage.getItem(\"guardadoLabMadre\") == null) {\r\n        crearOcupacion(formData)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Registro correcto\");\r\n              localStorage.setItem(\"guardadoLabMadre\", \"true\");\r\n              setLabMadre(JSON.stringify(formData));\r\n              localStorage.setItem(\"idLabMadre\", response.data);\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      } else {\r\n        let idOcupacion = localStorage.getItem(\"idLabMadre\");\r\n        updateOcupacion(formData, idOcupacion)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Actualizacion correcta\");\r\n              setLabMadre(JSON.stringify(formData));\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      }\r\n    }\r\n    if (tipoPerstate === 3) {\r\n      if (localStorage.getItem(\"guardadoLabPadre\") == null) {\r\n        crearOcupacion(formData)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Registro correcto\");\r\n              localStorage.setItem(\"guardadoLabPadre\", \"true\");\r\n              setLabPadre(JSON.stringify(formData));\r\n              localStorage.setItem(\"idLabPadre\", response.data);\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      } else {\r\n        let idOcupacion = localStorage.getItem(\"idLabPadre\");\r\n        updateOcupacion(formData, idOcupacion)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Actualizacion correcta\");\r\n              setLabPadre(JSON.stringify(formData));\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      }\r\n    }\r\n    if (tipoPerstate === 10) {\r\n      if (localStorage.getItem(\"guardadoLabPareja\") == null) {\r\n        crearOcupacion(formData)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Registro correcto\");\r\n              localStorage.setItem(\"guardadoLabPareja\", \"true\");\r\n              setLabPareja(JSON.stringify(formData));\r\n              localStorage.setItem(\"idLabPareja\", response.data);\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      } else {\r\n        let idOcupacion = localStorage.getItem(\"idLabPareja\");\r\n        updateOcupacion(formData, idOcupacion)\r\n          .then((response) => {\r\n            if (response.code) {\r\n              toast.warning(response.message);\r\n            } else {\r\n              toast.success(\"Actualizacion correcta\");\r\n              setLabPareja(JSON.stringify(formData));\r\n              setguardadoBoton(false);\r\n              setFormData(initialFormValue(tipoPerstate));\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error del servidor\");\r\n          })\r\n          .finally(() => {\r\n            setGuardadoLoading(false);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  /////////////////////////////////EMPIEZA FORMULARIO\r\n  return (\r\n    <div>\r\n      <Form onSubmit={onSubmit}>\r\n        <Jumbotron>\r\n          <div className=\"form-datos-personales\">\r\n            <h3>Ocupacion Actual</h3>\r\n            <Form>\r\n              <Form.Group>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>Cargo o Funcion</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Cargo o Funcion\"\r\n                      value={formData.cargo_funcion}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          cargo_funcion: e.target.value,\r\n                        }) | guardandoLocal(tipoPerstate, formData)\r\n                      }\r\n                      onKeyUp={() => guardandoLocal(tipoPerstate, formData)}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Ente</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      defaultValue=\"Seleccione\"\r\n                      placeholder=\"Cargo o Funcion\"\r\n                      value={formData.ente}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          ente: e.target.value,\r\n                        }) | guardandoLocal(tipoPerstate, formData)\r\n                      }\r\n                      onKeyUp={() => guardandoLocal(tipoPerstate, formData)}\r\n                    >\r\n                      <option value=\"0\">Seleccione</option>\r\n                      <option value=\"Publico\">Publico</option>\r\n                      <option value=\"Privado\">Privado</option>\r\n                      <option value=\"No trabaja\">No Trabaja</option>\r\n                    </Form.Control>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Label>Nombre de la Empresa</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nombre de la Empresa\"\r\n                      value={formData.nombreEmpresa}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          nombreEmpresa: e.target.value,\r\n                        }) | guardandoLocal(tipoPerstate, formData)\r\n                      }\r\n                      onKeyUp={() => guardandoLocal(tipoPerstate, formData)}\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Label>Direccion de la Empresa</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Direccion de empresa\"\r\n                      value={formData.direccion}\r\n                      onChange={(e) =>\r\n                        setFormData({\r\n                          ...formData,\r\n                          direccion: e.target.value,\r\n                        }) | guardandoLocal(tipoPerstate, formData)\r\n                      }\r\n                      onKeyUp={() => guardandoLocal(tipoPerstate, formData)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n          <Button variant=\"guardar\" type=\"submit\">\r\n            {!guardadoLoading ? \"Guardar \" : <Spinner animation=\"border\" />}\r\n            <FontAwesomeIcon icon={faSave} />\r\n          </Button>\r\n        </Jumbotron>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction initialFormValue(tipoPerstate) {\r\n  return {\r\n    cargo_funcion: llenarDelStorage(\"cargo_funcion\", \"\", tipoPerstate),\r\n    ente: llenarDelStorage(\"ente\", \"\", tipoPerstate),\r\n    nombreEmpresa: llenarDelStorage(\"nombreEmpresa\", \"\", tipoPerstate),\r\n    direccion: llenarDelStorage(\"direccion\", \"\", tipoPerstate),\r\n    persona_id: llenarDelStorage(\"persona_id\", \"\", tipoPerstate),\r\n  };\r\n}\r\n\r\nfunction guardandoLocal(tipoPerstate, formData) {\r\n  switch (tipoPerstate) {\r\n    case 1:\r\n      setLabPostu(JSON.stringify(formData));\r\n      break;\r\n    case 2:\r\n      setLabMadre(JSON.stringify(formData));\r\n      break;\r\n    case 3:\r\n      setLabPadre(JSON.stringify(formData));\r\n      break;\r\n    case 10:\r\n      setLabPareja(JSON.stringify(formData));\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction llenarDelStorage(campo, defval, tipoPerstate) {\r\n  switch (tipoPerstate) {\r\n    case 1:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"laboralPostu\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n    case 2:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"laboralMadre\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n\r\n    case 3:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"laboralPadre\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n\r\n    case 10:\r\n      var datosStorage = JSON.parse(localStorage.getItem(\"laboralPareja\"));\r\n      if (datosStorage != undefined) {\r\n        return datosStorage[campo];\r\n      }\r\n    default:\r\n      break;\r\n  }\r\n  return defval;\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulantePreguntas\\FormPostulantePreguntas.js",["406"],"import React, { useState } from \"react\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./FormPostulantePreguntas.scss\";\r\n\r\nexport default function FormPostulantePreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(1);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Postulante</h2>\r\n        <h3>Cuarto paso: Preguntas</h3>\r\n\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n        <Link to=\"/laboralPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosMadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\FormMadre.js",["407"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormMadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(2);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de la Madre</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasPostulante\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralMadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span> Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\FormMadreLaboral.js",["408"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\FormPadre.js",["409","410"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport DatosPersonales from \"../Componentes/DatosPersonales/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadre() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Primer paso: Datos Personales</h3>\r\n        <DatosPersonales\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/preguntasMadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/laboralPadre\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadrePreguntas\\FormPadrePreguntas.js",["411"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preguntas from \"../Componentes/Preguntas/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormPadrePreguntas() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(3);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion del Padre</h2>\r\n        <h3>Tercer paso: Preguntas</h3>\r\n\r\n        <Preguntas tipoPerstate={tipoPerstate} />\r\n\r\n        <Link to=\"/laboralPadre\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/datosPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\">\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\FormParejaLaboral.js",["412"],"import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Laboral from \"../Componentes/Laboral/index\";\r\n\r\nimport \"../FormPostulante/FormPostulante.scss\";\r\n\r\nexport default function FormParejaLaboral() {\r\n  //este state lo uso para harcodear el tipo de persona que recibe el componente de datos personales\r\n  const [tipoPerstate, settipoPerstate] = useState(10);\r\n  const [guardadoBoton, setguardadoBoton] = useState(true);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>Informacion de Conyuge, Concubino/a , Novio/a</h2>\r\n        <h3>Segundo paso: Informacion laboral</h3>\r\n        <Laboral\r\n          tipoPerstate={tipoPerstate}\r\n          setguardadoBoton={setguardadoBoton}\r\n        />\r\n\r\n        <Link to=\"/datosPareja\">\r\n          <Button variant=\"nav-prev\" type=\"submit\">\r\n            <span>Anterior</span>\r\n          </Button>\r\n        </Link>\r\n        <Link to=\"/preguntasPareja\">\r\n          <Button variant=\"nav-next\" type=\"submit\" disabled={guardadoBoton}>\r\n            <span>Siguiente</span>\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\TableRowPregPDF.js",["413"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n//este componente se usa para cargar dinamicamente las preguntas que traigo de la base\r\nexport default function TableRowPregPDF(props) {\r\n  const { pregunta } = props;\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{pregunta.textoPregunta}</td>\r\n        <td>\r\n          <Form.Control value={pregunta.respuesta} />\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowPregPDF\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\utils\\constant.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulanteEducacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadreLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormMadre\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\DatosPersonales\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Educacion\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\api\\combos.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Modal\\BasicModal\\BasicModal.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\page\\InicioForm\\InicioForm.js",["414","415","416"],"//rfc para crear componente rapido\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Routing from \"../../routes/Routing\";\r\n\r\nexport default function InicioForm() {\r\n  return (\r\n    <div>\r\n      <Routing />\r\n    </div>\r\n  );\r\n}\r\n/*\r\n      <FormPostulante />\r\n      <FormMadre />\r\n      <FormPadre />\r\n      <FormPareja />\r\n      <Container>\r\n        <h2>Quinto Paso: Otros Familiares</h2>\r\n        <OtrosFamiliares />\r\n      </Container> */\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormOtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadre\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Preguntas\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\TableRow.js",["417","418","419","420","421","422"],"C:\\xampp\\htdocs\\frontendFormulario\\src\\routes\\configRouting.js",["423"],"import FormPostulante from \"../components/Forms/FormPostulante/index\";\r\nimport FormPostulanteEducacion from \"../components/Forms/FormPostulanteEducacion/index\";\r\nimport FormPostulanteLaboral from \"../components/Forms/FormPostulanteLaboral/index\";\r\nimport FormPostulantePreguntas from \"../components/Forms/FormPostulantePreguntas/index\";\r\nimport FormMadre from \"../components/Forms/FormMadre/index\";\r\nimport FormMadreLaboral from \"../components/Forms/FormMadreLaboral/index\";\r\nimport FormMadrePreguntas from \"../components/Forms/FormMadrePreguntas/index\";\r\nimport FormPadre from \"../components/Forms/FormPadre/index\";\r\nimport FormPadreLaboral from \"../components/Forms/FormPadreLaboral/index\";\r\nimport FormPadrePreguntas from \"../components/Forms/FormPadrePreguntas/index\";\r\nimport FormPareja from \"../components/Forms/FormPareja/index\";\r\nimport FormParejaLaboral from \"../components/Forms/FormParejaLaboral/index\";\r\nimport FormParejaPreguntas from \"../components/Forms/FormParejaPreguntas/index\";\r\nimport FormOtrosFamiliares from \"../components/Forms/FormOtrosFamiliares/index\";\r\nimport Pdf from \"../components/Pdf/Pdf\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    page: FormPostulante,\r\n  },\r\n\r\n  {\r\n    path: \"/educacionPostulante\",\r\n    exact: true,\r\n    page: FormPostulanteEducacion,\r\n  },\r\n\r\n  {\r\n    path: \"/laboralPostulante\",\r\n    exact: true,\r\n    page: FormPostulanteLaboral,\r\n  },\r\n\r\n  {\r\n    path: \"/preguntasPostulante\",\r\n    exact: true,\r\n    page: FormPostulantePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosMadre\",\r\n    exact: true,\r\n    page: FormMadre,\r\n  },\r\n  {\r\n    path: \"/laboralMadre\",\r\n    exact: true,\r\n    page: FormMadreLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasMadre\",\r\n    exact: true,\r\n    page: FormMadrePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosPadre\",\r\n    exact: true,\r\n    page: FormPadre,\r\n  },\r\n  {\r\n    path: \"/laboralPadre\",\r\n    exact: true,\r\n    page: FormPadreLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasPadre\",\r\n    exact: true,\r\n    page: FormPadrePreguntas,\r\n  },\r\n  {\r\n    path: \"/datosPareja\",\r\n    exact: true,\r\n    page: FormPareja,\r\n  },\r\n  {\r\n    path: \"/laboralPareja\",\r\n    exact: true,\r\n    page: FormParejaLaboral,\r\n  },\r\n  {\r\n    path: \"/preguntasPareja\",\r\n    exact: true,\r\n    page: FormParejaPreguntas,\r\n  },\r\n  {\r\n    path: \"/otrosFliares\",\r\n    exact: true,\r\n    page: FormOtrosFamiliares,\r\n  },\r\n  {\r\n    path: \"/formFinal\",\r\n    exact: true,\r\n    page: Pdf,\r\n  },\r\n];\r\n","C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPareja\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\Laboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormParejaLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRow\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\TableRowEducacion\\TableRowEducacion.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPadreLaboral\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\Componentes\\AgregarOtrosFamiliares\\index.js",[],"C:\\xampp\\htdocs\\frontendFormulario\\src\\components\\Forms\\FormPostulante\\index.js",[],{"ruleId":"424","severity":1,"message":"425","line":2,"column":35,"nodeType":"426","messageId":"427","endLine":2,"endColumn":40},{"ruleId":"424","severity":1,"message":"428","line":9,"column":3,"nodeType":"426","messageId":"427","endLine":9,"endColumn":9},{"ruleId":"424","severity":1,"message":"429","line":10,"column":3,"nodeType":"426","messageId":"427","endLine":10,"endColumn":9},{"ruleId":"424","severity":1,"message":"430","line":11,"column":3,"nodeType":"426","messageId":"427","endLine":11,"endColumn":21},{"ruleId":"424","severity":1,"message":"431","line":38,"column":10,"nodeType":"426","messageId":"427","endLine":38,"endColumn":25},{"ruleId":"432","severity":1,"message":"433","line":83,"column":31,"nodeType":"434","messageId":"435","endLine":83,"endColumn":33},{"ruleId":"436","replacedBy":"437"},{"ruleId":"438","replacedBy":"439"},{"ruleId":"424","severity":1,"message":"440","line":13,"column":3,"nodeType":"426","messageId":"427","endLine":13,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":84,"column":31,"nodeType":"443","endLine":84,"endColumn":138},{"ruleId":"432","severity":1,"message":"433","line":131,"column":67,"nodeType":"434","messageId":"435","endLine":131,"endColumn":69},{"ruleId":"432","severity":1,"message":"433","line":559,"column":47,"nodeType":"434","messageId":"435","endLine":559,"endColumn":49},{"ruleId":"432","severity":1,"message":"433","line":735,"column":48,"nodeType":"434","messageId":"435","endLine":735,"endColumn":50},{"ruleId":"432","severity":1,"message":"433","line":736,"column":40,"nodeType":"434","messageId":"435","endLine":736,"endColumn":42},{"ruleId":"432","severity":1,"message":"433","line":912,"column":47,"nodeType":"434","messageId":"435","endLine":912,"endColumn":49},{"ruleId":"432","severity":1,"message":"433","line":1093,"column":48,"nodeType":"434","messageId":"435","endLine":1093,"endColumn":50},{"ruleId":"432","severity":1,"message":"433","line":1113,"column":40,"nodeType":"434","messageId":"435","endLine":1113,"endColumn":42},{"ruleId":"444","severity":1,"message":"445","line":1181,"column":26,"nodeType":"443","endLine":1181,"endColumn":72},{"ruleId":"436","replacedBy":"446"},{"ruleId":"438","replacedBy":"447"},{"ruleId":"424","severity":1,"message":"448","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":26},{"ruleId":"424","severity":1,"message":"449","line":25,"column":10,"nodeType":"426","messageId":"427","endLine":25,"endColumn":17},{"ruleId":"424","severity":1,"message":"450","line":25,"column":19,"nodeType":"426","messageId":"427","endLine":25,"endColumn":29},{"ruleId":"451","severity":1,"message":"452","line":69,"column":6,"nodeType":"453","endLine":69,"endColumn":8,"suggestions":"454"},{"ruleId":"432","severity":1,"message":"455","line":501,"column":13,"nodeType":"434","messageId":"435","endLine":501,"endColumn":15},{"ruleId":"424","severity":1,"message":"456","line":506,"column":10,"nodeType":"426","messageId":"427","endLine":506,"endColumn":28},{"ruleId":"432","severity":1,"message":"455","line":508,"column":13,"nodeType":"434","messageId":"435","endLine":508,"endColumn":15},{"ruleId":"436","replacedBy":"457"},{"ruleId":"438","replacedBy":"458"},{"ruleId":"436","replacedBy":"459"},{"ruleId":"438","replacedBy":"460"},{"ruleId":"424","severity":1,"message":"461","line":2,"column":20,"nodeType":"426","messageId":"427","endLine":2,"endColumn":26},{"ruleId":"424","severity":1,"message":"462","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":14},{"ruleId":"424","severity":1,"message":"463","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":14},{"ruleId":"424","severity":1,"message":"464","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":11},{"ruleId":"424","severity":1,"message":"465","line":2,"column":23,"nodeType":"426","messageId":"427","endLine":2,"endColumn":27},{"ruleId":"424","severity":1,"message":"466","line":2,"column":29,"nodeType":"426","messageId":"427","endLine":2,"endColumn":40},{"ruleId":"424","severity":1,"message":"467","line":2,"column":42,"nodeType":"426","messageId":"427","endLine":2,"endColumn":48},{"ruleId":"424","severity":1,"message":"468","line":2,"column":50,"nodeType":"426","messageId":"427","endLine":2,"endColumn":54},{"ruleId":"469","severity":1,"message":"470","line":129,"column":11,"nodeType":"426","messageId":"471","endLine":129,"endColumn":19},{"ruleId":"469","severity":1,"message":"470","line":133,"column":11,"nodeType":"426","messageId":"471","endLine":133,"endColumn":19},{"ruleId":"469","severity":1,"message":"470","line":137,"column":11,"nodeType":"426","messageId":"471","endLine":137,"endColumn":19},{"ruleId":"472","severity":1,"message":"473","line":403,"column":7,"nodeType":"474","messageId":"475","endLine":403,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":406,"column":7,"nodeType":"474","messageId":"475","endLine":406,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":409,"column":7,"nodeType":"474","messageId":"475","endLine":409,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":412,"column":7,"nodeType":"474","messageId":"475","endLine":412,"endColumn":13},{"ruleId":"436","replacedBy":"476"},{"ruleId":"438","replacedBy":"477"},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":12,"column":24,"nodeType":"426","messageId":"427","endLine":12,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"467","line":3,"column":16,"nodeType":"426","messageId":"427","endLine":3,"endColumn":22},{"ruleId":"424","severity":1,"message":"479","line":15,"column":21,"nodeType":"426","messageId":"427","endLine":15,"endColumn":33},{"ruleId":"424","severity":1,"message":"480","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":19},{"ruleId":"424","severity":1,"message":"481","line":16,"column":21,"nodeType":"426","messageId":"427","endLine":16,"endColumn":33},{"ruleId":"424","severity":1,"message":"482","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":22},{"ruleId":"424","severity":1,"message":"483","line":17,"column":24,"nodeType":"426","messageId":"427","endLine":17,"endColumn":39},{"ruleId":"451","severity":1,"message":"484","line":34,"column":6,"nodeType":"453","endLine":34,"endColumn":8,"suggestions":"485"},{"ruleId":"451","severity":1,"message":"486","line":48,"column":6,"nodeType":"453","endLine":48,"endColumn":8,"suggestions":"487"},{"ruleId":"432","severity":1,"message":"433","line":71,"column":35,"nodeType":"434","messageId":"435","endLine":71,"endColumn":37},{"ruleId":"432","severity":1,"message":"433","line":72,"column":36,"nodeType":"434","messageId":"435","endLine":72,"endColumn":38},{"ruleId":"432","severity":1,"message":"433","line":112,"column":20,"nodeType":"434","messageId":"435","endLine":112,"endColumn":22},{"ruleId":"432","severity":1,"message":"433","line":115,"column":36,"nodeType":"434","messageId":"435","endLine":115,"endColumn":38},{"ruleId":"432","severity":1,"message":"455","line":128,"column":36,"nodeType":"434","messageId":"435","endLine":128,"endColumn":38},{"ruleId":"436","replacedBy":"488"},{"ruleId":"438","replacedBy":"489"},{"ruleId":"490","severity":1,"message":"491","line":4,"column":36,"nodeType":"492","messageId":"493","endLine":4,"endColumn":37,"suggestions":"494"},{"ruleId":"490","severity":1,"message":"495","line":4,"column":38,"nodeType":"492","messageId":"493","endLine":4,"endColumn":39,"suggestions":"496"},{"ruleId":"490","severity":1,"message":"497","line":4,"column":43,"nodeType":"492","messageId":"493","endLine":4,"endColumn":44,"suggestions":"498"},{"ruleId":"490","severity":1,"message":"495","line":4,"column":57,"nodeType":"492","messageId":"493","endLine":4,"endColumn":58,"suggestions":"499"},{"ruleId":"490","severity":1,"message":"491","line":10,"column":41,"nodeType":"492","messageId":"493","endLine":10,"endColumn":42,"suggestions":"500"},{"ruleId":"490","severity":1,"message":"501","line":10,"column":43,"nodeType":"492","messageId":"493","endLine":10,"endColumn":44,"suggestions":"502"},{"ruleId":"490","severity":1,"message":"503","line":10,"column":45,"nodeType":"492","messageId":"493","endLine":10,"endColumn":46,"suggestions":"504"},{"ruleId":"424","severity":1,"message":"505","line":6,"column":10,"nodeType":"426","messageId":"427","endLine":6,"endColumn":16},{"ruleId":"424","severity":1,"message":"506","line":6,"column":18,"nodeType":"426","messageId":"427","endLine":6,"endColumn":22},{"ruleId":"424","severity":1,"message":"431","line":23,"column":10,"nodeType":"426","messageId":"427","endLine":23,"endColumn":25},{"ruleId":"432","severity":1,"message":"455","line":274,"column":22,"nodeType":"434","messageId":"435","endLine":274,"endColumn":24},{"ruleId":"432","severity":1,"message":"455","line":275,"column":22,"nodeType":"434","messageId":"435","endLine":275,"endColumn":24},{"ruleId":"432","severity":1,"message":"455","line":276,"column":22,"nodeType":"434","messageId":"435","endLine":276,"endColumn":24},{"ruleId":"432","severity":1,"message":"455","line":277,"column":22,"nodeType":"434","messageId":"435","endLine":277,"endColumn":24},{"ruleId":"432","severity":1,"message":"455","line":278,"column":22,"nodeType":"434","messageId":"435","endLine":278,"endColumn":24},{"ruleId":"424","severity":1,"message":"507","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":22},{"ruleId":"424","severity":1,"message":"431","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":25},{"ruleId":"451","severity":1,"message":"508","line":30,"column":6,"nodeType":"453","endLine":30,"endColumn":8,"suggestions":"509"},{"ruleId":"424","severity":1,"message":"478","line":10,"column":24,"nodeType":"426","messageId":"427","endLine":10,"endColumn":39},{"ruleId":"424","severity":1,"message":"510","line":32,"column":3,"nodeType":"426","messageId":"427","endLine":32,"endColumn":10},{"ruleId":"424","severity":1,"message":"511","line":55,"column":10,"nodeType":"426","messageId":"427","endLine":55,"endColumn":20},{"ruleId":"432","severity":1,"message":"455","line":855,"column":24,"nodeType":"434","messageId":"435","endLine":855,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":858,"column":5,"nodeType":"514","messageId":"515","endLine":862,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":859,"column":11,"nodeType":"426","messageId":"471","endLine":859,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":860,"column":24,"nodeType":"434","messageId":"435","endLine":860,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":864,"column":5,"nodeType":"514","messageId":"515","endLine":868,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":865,"column":11,"nodeType":"426","messageId":"471","endLine":865,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":866,"column":24,"nodeType":"434","messageId":"435","endLine":866,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":870,"column":5,"nodeType":"514","messageId":"515","endLine":874,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":871,"column":11,"nodeType":"426","messageId":"471","endLine":871,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":872,"column":24,"nodeType":"434","messageId":"435","endLine":872,"endColumn":26},{"ruleId":"512","severity":1,"message":"517","line":875,"column":5,"nodeType":"514","messageId":"518","endLine":876,"endColumn":13},{"ruleId":"432","severity":1,"message":"433","line":883,"column":20,"nodeType":"434","messageId":"435","endLine":883,"endColumn":22},{"ruleId":"432","severity":1,"message":"455","line":1019,"column":27,"nodeType":"434","messageId":"435","endLine":1019,"endColumn":29},{"ruleId":"469","severity":1,"message":"519","line":1024,"column":12,"nodeType":"426","messageId":"471","endLine":1024,"endColumn":13},{"ruleId":"432","severity":1,"message":"433","line":1025,"column":25,"nodeType":"434","messageId":"435","endLine":1025,"endColumn":27},{"ruleId":"424","severity":1,"message":"478","line":10,"column":24,"nodeType":"426","messageId":"427","endLine":10,"endColumn":39},{"ruleId":"424","severity":1,"message":"505","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":16},{"ruleId":"424","severity":1,"message":"506","line":3,"column":18,"nodeType":"426","messageId":"427","endLine":3,"endColumn":22},{"ruleId":"424","severity":1,"message":"507","line":23,"column":10,"nodeType":"426","messageId":"427","endLine":23,"endColumn":22},{"ruleId":"451","severity":1,"message":"520","line":39,"column":6,"nodeType":"453","endLine":39,"endColumn":8,"suggestions":"521"},{"ruleId":"432","severity":1,"message":"455","line":343,"column":24,"nodeType":"434","messageId":"435","endLine":343,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":346,"column":5,"nodeType":"514","messageId":"515","endLine":350,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":347,"column":11,"nodeType":"426","messageId":"471","endLine":347,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":348,"column":24,"nodeType":"434","messageId":"435","endLine":348,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":352,"column":5,"nodeType":"514","messageId":"515","endLine":356,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":353,"column":11,"nodeType":"426","messageId":"471","endLine":353,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":354,"column":24,"nodeType":"434","messageId":"435","endLine":354,"endColumn":26},{"ruleId":"512","severity":1,"message":"513","line":358,"column":5,"nodeType":"514","messageId":"515","endLine":362,"endColumn":8},{"ruleId":"469","severity":1,"message":"516","line":359,"column":11,"nodeType":"426","messageId":"471","endLine":359,"endColumn":23},{"ruleId":"432","severity":1,"message":"455","line":360,"column":24,"nodeType":"434","messageId":"435","endLine":360,"endColumn":26},{"ruleId":"512","severity":1,"message":"517","line":363,"column":5,"nodeType":"514","messageId":"518","endLine":364,"endColumn":13},{"ruleId":"424","severity":1,"message":"478","line":10,"column":24,"nodeType":"426","messageId":"427","endLine":10,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"522","line":1,"column":27,"nodeType":"426","messageId":"427","endLine":1,"endColumn":36},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":10,"column":24,"nodeType":"426","messageId":"427","endLine":10,"endColumn":39},{"ruleId":"424","severity":1,"message":"478","line":11,"column":24,"nodeType":"426","messageId":"427","endLine":11,"endColumn":39},{"ruleId":"424","severity":1,"message":"523","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":25},{"ruleId":"424","severity":1,"message":"523","line":2,"column":17,"nodeType":"426","messageId":"427","endLine":2,"endColumn":25},{"ruleId":"424","severity":1,"message":"522","line":2,"column":27,"nodeType":"426","messageId":"427","endLine":2,"endColumn":36},{"ruleId":"424","severity":1,"message":"524","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":19},{"ruleId":"424","severity":1,"message":"525","line":4,"column":3,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"526","line":5,"column":3,"nodeType":"426","messageId":"427","endLine":5,"endColumn":20},{"ruleId":"424","severity":1,"message":"527","line":6,"column":3,"nodeType":"426","messageId":"427","endLine":6,"endColumn":20},{"ruleId":"424","severity":1,"message":"528","line":7,"column":3,"nodeType":"426","messageId":"427","endLine":7,"endColumn":21},{"ruleId":"424","severity":1,"message":"529","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":30},{"ruleId":"424","severity":1,"message":"431","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":25},{"ruleId":"530","severity":1,"message":"531","line":17,"column":1,"nodeType":"532","endLine":96,"endColumn":3},"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'faPlus' is defined but never used.","'faSave' is defined but never used.","'faCloudDownloadAlt' is defined but never used.","'guardadoLoading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["533"],"no-negated-in-lhs",["534"],"'getOtrosFamiliaresPersona' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["533"],["534"],"'getEstudiosLocal' is defined but never used.","'refresh' is assigned a value but never used.","'setrefresh' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formData' and 'idPostulante'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["535"],"Expected '!==' and instead saw '!='.","'llenarDelStorageId' is defined but never used.",["533"],["534"],["533"],["534"],"'render' is defined but never used.","'Footer' is defined but never used.","'Header' is defined but never used.","'Pdf' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","no-redeclare","'guardado' is already defined.","redeclared","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["533"],["534"],"'settipoPerstate' is assigned a value but never used.","'setidpersona' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'contentModal' is assigned a value but never used.","'setContentModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tipoPerstate'. Either include it or remove the dependency array.",["536"],"React Hook useEffect has missing dependencies: 'idPersona' and 'tipoPerstate'. Either include them or remove the dependency array.",["537"],["533"],["534"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["538","539"],"Unnecessary escape character: \\-.",["540","541"],"Unnecessary escape character: \\@.",["542","543"],["544","545"],["546","547"],"Unnecessary escape character: \\(.",["548","549"],"Unnecessary escape character: \\).",["550","551"],"'values' is defined but never used.","'size' is defined but never used.","'idPostulante' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["552"],"'getSuId' is defined but never used.","'estadoCivi' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'datosStorage' is already defined.","Expected a 'break' statement before 'default'.","default","'i' is already defined.","React Hook useEffect has missing dependencies: 'formData' and 'tipoPerstate'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["553"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'setPreguntasPostu' is defined but never used.","'setPreguntasMadre' is defined but never used.","'setPreguntasPadre' is defined but never used.","'setPreguntasPareja' is defined but never used.","'getRespuestasPersona' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"messageId":"560","fix":"561","desc":"562"},{"messageId":"563","fix":"564","desc":"565"},{"messageId":"560","fix":"566","desc":"562"},{"messageId":"563","fix":"567","desc":"565"},{"messageId":"560","fix":"568","desc":"562"},{"messageId":"563","fix":"569","desc":"565"},{"messageId":"560","fix":"570","desc":"562"},{"messageId":"563","fix":"571","desc":"565"},{"messageId":"560","fix":"572","desc":"562"},{"messageId":"563","fix":"573","desc":"565"},{"messageId":"560","fix":"574","desc":"562"},{"messageId":"563","fix":"575","desc":"565"},{"messageId":"560","fix":"576","desc":"562"},{"messageId":"563","fix":"577","desc":"565"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},"Update the dependencies array to be: [formData, idPostulante]",{"range":"582","text":"583"},"Update the dependencies array to be: [tipoPerstate]",{"range":"584","text":"585"},"Update the dependencies array to be: [idPersona, tipoPerstate]",{"range":"586","text":"587"},"removeEscape",{"range":"588","text":"589"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"590","text":"591"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"592","text":"589"},{"range":"593","text":"591"},{"range":"594","text":"589"},{"range":"595","text":"591"},{"range":"596","text":"589"},{"range":"597","text":"591"},{"range":"598","text":"589"},{"range":"599","text":"591"},{"range":"600","text":"589"},{"range":"601","text":"591"},{"range":"602","text":"589"},{"range":"603","text":"591"},"Update the dependencies array to be: [formData]",{"range":"604","text":"605"},"Update the dependencies array to be: [formData, tipoPerstate]",{"range":"606","text":"607"},[2742,2744],"[formData, idPostulante]",[1216,1218],"[tipoPerstate]",[1573,1575],"[idPersona, tipoPerstate]",[122,123],"",[122,122],"\\",[124,125],[124,124],[129,130],[129,129],[143,144],[143,143],[325,326],[325,325],[327,328],[327,327],[329,330],[329,329],[1316,1318],"[formData]",[1397,1399],"[formData, tipoPerstate]"]